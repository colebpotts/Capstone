{
 "cells": [
  {
   "cell_type": "markdown",
   "id": "334e0b06",
   "metadata": {},
   "source": [
    "# Capstone Project: I want to watch a movie...\n",
    "**Author:** Cole Beevor-Potts\n",
    "\n",
    "**Current Date:** December 11th 2023"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "0fd0b9d9",
   "metadata": {},
   "source": [
    "### Table of Contents\n",
    "- [Inroduction](#introduction)\n",
    "- [Exploratory Data Analysis](#exploratory-data-analysis)\n",
    "  - [Early EDA Insights](#early-eda-insights)\n",
    "  - [Ratings EDA & Feature Engineering](#ratings-eda-&-feature-engineering)\n",
    "  - [Movie Rating Summary Insights](#movie-rating-summary-insights)\n",
    "  - [Users Data](#users-data)\n",
    "- [Creating Dataframe for Pre-Processing](#creating-dataframe-for-pre-processing)\n",
    "    - [Correlation Insights](#correlation-insights)\n",
    "    - [Final Dataframe](#final-dataframe)\n",
    "- [Data Dictionary](#data-dictionary)\n"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "ba59e86d",
   "metadata": {},
   "source": [
    "## Introduction\n",
    "\n",
    "Welcome to my Bainstation Data Science Capstone project: the Movie Recommender System. As a film lover, I've experienced the frustration of spending too much time searching for the perfect movie, only to end up disappointed. This project aims to change that.\n",
    "\n",
    "I will be using a dataset scraped from Letterboxd that is available on Kaggle by Sam Learner. Find the dataset here: https://www.kaggle.com/datasets/samlearner/letterboxd-movie-ratings-data\n",
    "\n",
    "I'll use machine learning to personalize recommendations based on individual tastes. The goal? To save time, offer efficient movie choices, and ensure a satisfying movie night, whether you're a casual viewer, a busy professional, a movie fanatic, or someone seeking tailored suggestions.\n",
    "\n",
    "This project isn't just about recommending movies; it's a data-driven journey to transform how we enjoy films. Join me in redefining the movie-watching experience, making it more enjoyable and stress-free for all cinephiles!\n",
    "\n",
    "This workbook will be for exploring the data and making any early adjustements needed."
   ]
  },
  {
   "cell_type": "markdown",
   "id": "dae1f424",
   "metadata": {},
   "source": [
    "## Exploratory Data Analysis"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 1,
   "id": "b7180f82",
   "metadata": {},
   "outputs": [],
   "source": [
    "import pandas as pd\n",
    "import numpy as np\n",
    "import matplotlib.pyplot as plt\n",
    "import seaborn as sns\n",
    "\n",
    "from sklearn.feature_extraction.text import TfidfVectorizer\n",
    "from sklearn.preprocessing import StandardScaler\n",
    "from sklearn.metrics.pairwise import cosine_similarity\n",
    "from sklearn.preprocessing import MultiLabelBinarizer\n",
    "from sklearn.neighbors import NearestNeighbors"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "43ea4e81",
   "metadata": {},
   "source": [
    "The data is comprised of 3 files: Movies, Ratings, and Users. The data is robust with 3 files, 28 total columns, and the rating table having over 11 million unique reviews to pull from.\n",
    "\n",
    "To begin, lets load in all the data."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 3,
   "id": "a04842f8",
   "metadata": {},
   "outputs": [],
   "source": [
    "ratings = pd.read_csv(\"data/ratings_export.csv\")"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 4,
   "id": "183e458a",
   "metadata": {},
   "outputs": [],
   "source": [
    "users = pd.read_csv(\"data/users_export.csv\")"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 5,
   "id": "88d61d66",
   "metadata": {},
   "outputs": [],
   "source": [
    "# We were encountering a parsing error when loading the data, lineterminator resolved this \n",
    "movies = pd.read_csv('data/movie_data.csv', lineterminator='\\n')"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "699b39f8",
   "metadata": {},
   "source": [
    "For our movies data set, we were encountering a parsing error when attempting to load the data. The on_bad_lines will skip and lines that would cause this error to occur.\n",
    "\n",
    "Lets continue into looking at what our data looks like:"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "ef98a3fc",
   "metadata": {},
   "source": [
    "**Movies:** Data on every movie represented in the ratings data. This makes up a very large, but incomplete set of all movies on Letterboxd. "
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 6,
   "id": "892f0f82",
   "metadata": {
    "scrolled": true
   },
   "outputs": [
    {
     "data": {
      "text/plain": [
       "(273641, 19)"
      ]
     },
     "execution_count": 6,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "#Dimensions of movies df\n",
    "movies.shape"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "cc94bdd0",
   "metadata": {},
   "source": [
    "Our movies data has 273,641 movies with 19 columns. Lets take a look at what columns we have and trim down qualititavely based on what we want to keep for now. We may drop more letter after quantitative analysis: "
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 6,
   "id": "87f19ad7",
   "metadata": {
    "scrolled": true
   },
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>_id</th>\n",
       "      <th>genres</th>\n",
       "      <th>image_url</th>\n",
       "      <th>imdb_id</th>\n",
       "      <th>imdb_link</th>\n",
       "      <th>movie_id</th>\n",
       "      <th>movie_title</th>\n",
       "      <th>original_language</th>\n",
       "      <th>overview</th>\n",
       "      <th>popularity</th>\n",
       "      <th>production_countries</th>\n",
       "      <th>release_date</th>\n",
       "      <th>runtime</th>\n",
       "      <th>spoken_languages</th>\n",
       "      <th>tmdb_id</th>\n",
       "      <th>tmdb_link</th>\n",
       "      <th>vote_average</th>\n",
       "      <th>vote_count</th>\n",
       "      <th>year_released</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>5fc85f606758f69634496fd3</td>\n",
       "      <td>[\"Music\",\"Animation\"]</td>\n",
       "      <td>film-poster/4/6/4/4/4/0/464440-football-freaks...</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>football-freaks</td>\n",
       "      <td>Football Freaks</td>\n",
       "      <td>en</td>\n",
       "      <td>Football crazy, football mad. Don’t watch this...</td>\n",
       "      <td>0.600</td>\n",
       "      <td>[\"United Kingdom\"]</td>\n",
       "      <td>1971-12-05</td>\n",
       "      <td>0.0</td>\n",
       "      <td>[]</td>\n",
       "      <td>535272.0</td>\n",
       "      <td>https://www.themoviedb.org/movie/535272/</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>1971.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>5fc85ff26758f696344ace0c</td>\n",
       "      <td>[]</td>\n",
       "      <td>film-poster/2/4/5/5/0/0/245500-aftermath-0-230...</td>\n",
       "      <td>tt0586129</td>\n",
       "      <td>http://www.imdb.com/title/tt0586129/maindetails</td>\n",
       "      <td>aftermath-1960</td>\n",
       "      <td>Aftermath</td>\n",
       "      <td>en</td>\n",
       "      <td>Aftermath was the pilot for an unsold TV serie...</td>\n",
       "      <td>0.600</td>\n",
       "      <td>[]</td>\n",
       "      <td>1960-04-17</td>\n",
       "      <td>22.0</td>\n",
       "      <td>[]</td>\n",
       "      <td>318331.0</td>\n",
       "      <td>https://www.themoviedb.org/movie/318331/</td>\n",
       "      <td>8.0</td>\n",
       "      <td>1.0</td>\n",
       "      <td>1960.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>5fc85f606758f69634496fcd</td>\n",
       "      <td>[\"Drama\"]</td>\n",
       "      <td>film-poster/9/3/3/1/8/93318-where-chimneys-are...</td>\n",
       "      <td>tt0045731</td>\n",
       "      <td>http://www.imdb.com/title/tt0045731/maindetails</td>\n",
       "      <td>where-chimneys-are-seen</td>\n",
       "      <td>Where Chimneys Are Seen</td>\n",
       "      <td>ja</td>\n",
       "      <td>Gosho’s most celebrated film both in Japan and...</td>\n",
       "      <td>1.568</td>\n",
       "      <td>[\"Japan\"]</td>\n",
       "      <td>1953-03-05</td>\n",
       "      <td>108.0</td>\n",
       "      <td>[\"日本語\"]</td>\n",
       "      <td>117779.0</td>\n",
       "      <td>https://www.themoviedb.org/movie/117779/</td>\n",
       "      <td>6.6</td>\n",
       "      <td>10.0</td>\n",
       "      <td>1953.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>5fc85f606758f69634496fd1</td>\n",
       "      <td>[\"Drama\"]</td>\n",
       "      <td>NaN</td>\n",
       "      <td>tt0187327</td>\n",
       "      <td>http://www.imdb.com/title/tt0187327/maindetails</td>\n",
       "      <td>the-musicians-daughter</td>\n",
       "      <td>The Musician's Daughter</td>\n",
       "      <td>en</td>\n",
       "      <td>Carl Wagner's good wife was dying. His heart b...</td>\n",
       "      <td>0.600</td>\n",
       "      <td>[\"United States of America\"]</td>\n",
       "      <td>1911-12-12</td>\n",
       "      <td>15.0</td>\n",
       "      <td>[]</td>\n",
       "      <td>560377.0</td>\n",
       "      <td>https://www.themoviedb.org/movie/560377/</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>1911.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>5fc85f606758f69634496fd4</td>\n",
       "      <td>[\"Documentary\"]</td>\n",
       "      <td>film-poster/4/5/4/6/0/3/454603-50-years-of-fab...</td>\n",
       "      <td>tt4769914</td>\n",
       "      <td>http://www.imdb.com/title/tt4769914/maindetails</td>\n",
       "      <td>50-years-of-fabulous</td>\n",
       "      <td>50 Years of Fabulous</td>\n",
       "      <td>en</td>\n",
       "      <td>50 Years of Fabulous recounts the rich history...</td>\n",
       "      <td>0.600</td>\n",
       "      <td>[]</td>\n",
       "      <td>2018-05-17</td>\n",
       "      <td>75.0</td>\n",
       "      <td>[]</td>\n",
       "      <td>525187.0</td>\n",
       "      <td>https://www.themoviedb.org/movie/525187/</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>2018.0</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "                        _id                 genres  \\\n",
       "0  5fc85f606758f69634496fd3  [\"Music\",\"Animation\"]   \n",
       "1  5fc85ff26758f696344ace0c                     []   \n",
       "2  5fc85f606758f69634496fcd              [\"Drama\"]   \n",
       "3  5fc85f606758f69634496fd1              [\"Drama\"]   \n",
       "4  5fc85f606758f69634496fd4        [\"Documentary\"]   \n",
       "\n",
       "                                           image_url    imdb_id  \\\n",
       "0  film-poster/4/6/4/4/4/0/464440-football-freaks...        NaN   \n",
       "1  film-poster/2/4/5/5/0/0/245500-aftermath-0-230...  tt0586129   \n",
       "2  film-poster/9/3/3/1/8/93318-where-chimneys-are...  tt0045731   \n",
       "3                                                NaN  tt0187327   \n",
       "4  film-poster/4/5/4/6/0/3/454603-50-years-of-fab...  tt4769914   \n",
       "\n",
       "                                         imdb_link                 movie_id  \\\n",
       "0                                              NaN          football-freaks   \n",
       "1  http://www.imdb.com/title/tt0586129/maindetails           aftermath-1960   \n",
       "2  http://www.imdb.com/title/tt0045731/maindetails  where-chimneys-are-seen   \n",
       "3  http://www.imdb.com/title/tt0187327/maindetails   the-musicians-daughter   \n",
       "4  http://www.imdb.com/title/tt4769914/maindetails     50-years-of-fabulous   \n",
       "\n",
       "               movie_title original_language  \\\n",
       "0          Football Freaks                en   \n",
       "1                Aftermath                en   \n",
       "2  Where Chimneys Are Seen                ja   \n",
       "3  The Musician's Daughter                en   \n",
       "4     50 Years of Fabulous                en   \n",
       "\n",
       "                                            overview  popularity  \\\n",
       "0  Football crazy, football mad. Don’t watch this...       0.600   \n",
       "1  Aftermath was the pilot for an unsold TV serie...       0.600   \n",
       "2  Gosho’s most celebrated film both in Japan and...       1.568   \n",
       "3  Carl Wagner's good wife was dying. His heart b...       0.600   \n",
       "4  50 Years of Fabulous recounts the rich history...       0.600   \n",
       "\n",
       "           production_countries release_date  runtime spoken_languages  \\\n",
       "0            [\"United Kingdom\"]   1971-12-05      0.0               []   \n",
       "1                            []   1960-04-17     22.0               []   \n",
       "2                     [\"Japan\"]   1953-03-05    108.0          [\"日本語\"]   \n",
       "3  [\"United States of America\"]   1911-12-12     15.0               []   \n",
       "4                            []   2018-05-17     75.0               []   \n",
       "\n",
       "    tmdb_id                                 tmdb_link  vote_average  \\\n",
       "0  535272.0  https://www.themoviedb.org/movie/535272/           0.0   \n",
       "1  318331.0  https://www.themoviedb.org/movie/318331/           8.0   \n",
       "2  117779.0  https://www.themoviedb.org/movie/117779/           6.6   \n",
       "3  560377.0  https://www.themoviedb.org/movie/560377/           0.0   \n",
       "4  525187.0  https://www.themoviedb.org/movie/525187/           0.0   \n",
       "\n",
       "   vote_count  year_released  \n",
       "0         0.0         1971.0  \n",
       "1         1.0         1960.0  \n",
       "2        10.0         1953.0  \n",
       "3         0.0         1911.0  \n",
       "4         0.0         2018.0  "
      ]
     },
     "execution_count": 6,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "movies.head()"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "e129cd37",
   "metadata": {},
   "source": [
    "We will immediately select our columns of potential interest.\n",
    "\n",
    "We dropped: image url, imdb_id, imdb_link, movie_title,production_countries, spoken_languages, tmdb_id, tmdb_link\n",
    "\n",
    "* We dropped the imdb information as its not currently relevant to us, in a future iteration of this proejct we could use imdb to pull in actors and directors. This will not be in the scope of the initial project\n",
    "* We drop movie title because we have movie_id which contains the same information but with a specific format to match with our other tables as a unique id.\n",
    "* We drop TMDB columns for the same reason as IMDB, not currently in the scope of the project\n",
    "* We keep the vote average and the vote count for the time being but **Note: this count and average are from TMDB and not the letterboxd dataset we are working with.** We will calculate this for our dataset ourselves.\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 8,
   "id": "0eb4872b",
   "metadata": {},
   "outputs": [],
   "source": [
    "columns_of_interest=['_id','genres','movie_id','original_language', 'overview','popularity','release_date','runtime','vote_average','vote_count','year_released']\n",
    "movies_clean = movies[columns_of_interest]"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 8,
   "id": "bf50fa38",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "(273641, 11)"
      ]
     },
     "execution_count": 8,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "#Sanity Check\n",
    "movies_clean.shape"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 9,
   "id": "b30f23f8",
   "metadata": {
    "scrolled": true
   },
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>_id</th>\n",
       "      <th>genres</th>\n",
       "      <th>movie_id</th>\n",
       "      <th>original_language</th>\n",
       "      <th>overview</th>\n",
       "      <th>popularity</th>\n",
       "      <th>release_date</th>\n",
       "      <th>runtime</th>\n",
       "      <th>vote_average</th>\n",
       "      <th>vote_count</th>\n",
       "      <th>year_released</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>5fc85f606758f69634496fd3</td>\n",
       "      <td>[\"Music\",\"Animation\"]</td>\n",
       "      <td>football-freaks</td>\n",
       "      <td>en</td>\n",
       "      <td>Football crazy, football mad. Don’t watch this...</td>\n",
       "      <td>0.600</td>\n",
       "      <td>1971-12-05</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>1971.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>5fc85ff26758f696344ace0c</td>\n",
       "      <td>[]</td>\n",
       "      <td>aftermath-1960</td>\n",
       "      <td>en</td>\n",
       "      <td>Aftermath was the pilot for an unsold TV serie...</td>\n",
       "      <td>0.600</td>\n",
       "      <td>1960-04-17</td>\n",
       "      <td>22.0</td>\n",
       "      <td>8.0</td>\n",
       "      <td>1.0</td>\n",
       "      <td>1960.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>5fc85f606758f69634496fcd</td>\n",
       "      <td>[\"Drama\"]</td>\n",
       "      <td>where-chimneys-are-seen</td>\n",
       "      <td>ja</td>\n",
       "      <td>Gosho’s most celebrated film both in Japan and...</td>\n",
       "      <td>1.568</td>\n",
       "      <td>1953-03-05</td>\n",
       "      <td>108.0</td>\n",
       "      <td>6.6</td>\n",
       "      <td>10.0</td>\n",
       "      <td>1953.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>5fc85f606758f69634496fd1</td>\n",
       "      <td>[\"Drama\"]</td>\n",
       "      <td>the-musicians-daughter</td>\n",
       "      <td>en</td>\n",
       "      <td>Carl Wagner's good wife was dying. His heart b...</td>\n",
       "      <td>0.600</td>\n",
       "      <td>1911-12-12</td>\n",
       "      <td>15.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>1911.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>5fc85f606758f69634496fd4</td>\n",
       "      <td>[\"Documentary\"]</td>\n",
       "      <td>50-years-of-fabulous</td>\n",
       "      <td>en</td>\n",
       "      <td>50 Years of Fabulous recounts the rich history...</td>\n",
       "      <td>0.600</td>\n",
       "      <td>2018-05-17</td>\n",
       "      <td>75.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>2018.0</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "                        _id                 genres                 movie_id  \\\n",
       "0  5fc85f606758f69634496fd3  [\"Music\",\"Animation\"]          football-freaks   \n",
       "1  5fc85ff26758f696344ace0c                     []           aftermath-1960   \n",
       "2  5fc85f606758f69634496fcd              [\"Drama\"]  where-chimneys-are-seen   \n",
       "3  5fc85f606758f69634496fd1              [\"Drama\"]   the-musicians-daughter   \n",
       "4  5fc85f606758f69634496fd4        [\"Documentary\"]     50-years-of-fabulous   \n",
       "\n",
       "  original_language                                           overview  \\\n",
       "0                en  Football crazy, football mad. Don’t watch this...   \n",
       "1                en  Aftermath was the pilot for an unsold TV serie...   \n",
       "2                ja  Gosho’s most celebrated film both in Japan and...   \n",
       "3                en  Carl Wagner's good wife was dying. His heart b...   \n",
       "4                en  50 Years of Fabulous recounts the rich history...   \n",
       "\n",
       "   popularity release_date  runtime  vote_average  vote_count  year_released  \n",
       "0       0.600   1971-12-05      0.0           0.0         0.0         1971.0  \n",
       "1       0.600   1960-04-17     22.0           8.0         1.0         1960.0  \n",
       "2       1.568   1953-03-05    108.0           6.6        10.0         1953.0  \n",
       "3       0.600   1911-12-12     15.0           0.0         0.0         1911.0  \n",
       "4       0.600   2018-05-17     75.0           0.0         0.0         2018.0  "
      ]
     },
     "execution_count": 9,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "#Sanity check\n",
    "movies_clean.head()"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "8b7213b8",
   "metadata": {},
   "source": [
    "Lets check for duplicates:"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 10,
   "id": "bd8c18cd",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "0"
      ]
     },
     "execution_count": 10,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "movies_clean.duplicated().sum()"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "766a4e6b",
   "metadata": {},
   "source": [
    "There are no duplicates.\n",
    "\n",
    "Now lets check for nulls:"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 11,
   "id": "2b4d3ee3",
   "metadata": {
    "scrolled": true
   },
   "outputs": [
    {
     "data": {
      "text/plain": [
       "_id                      0\n",
       "genres                9976\n",
       "movie_id                 2\n",
       "original_language     9976\n",
       "overview             22502\n",
       "popularity            9976\n",
       "release_date         13367\n",
       "runtime              14659\n",
       "vote_average          9977\n",
       "vote_count            9977\n",
       "year_released         7039\n",
       "dtype: int64"
      ]
     },
     "execution_count": 11,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "movies_clean.isnull().sum()"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "2040969d",
   "metadata": {},
   "source": [
    "We have a sizeable amount of nulls here, lets check what they are as a percentage:\n",
    "    "
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 12,
   "id": "95d79c40",
   "metadata": {
    "scrolled": true
   },
   "outputs": [
    {
     "data": {
      "text/plain": [
       "_id                  0.000000\n",
       "genres               0.036457\n",
       "movie_id             0.000007\n",
       "original_language    0.036457\n",
       "overview             0.082232\n",
       "popularity           0.036457\n",
       "release_date         0.048849\n",
       "runtime              0.053570\n",
       "vote_average         0.036460\n",
       "vote_count           0.036460\n",
       "year_released        0.025723\n",
       "dtype: float64"
      ]
     },
     "execution_count": 12,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "movies_clean.isnull().sum() / movies.shape[0]"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "0eeaccce",
   "metadata": {},
   "source": [
    "Our column with the most amount of nulls is Overview with 8.2%. All of our columns are within single digit percent. \n",
    "\n",
    "Lets filter some columns first and then we will return to this."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 13,
   "id": "b6674b28",
   "metadata": {
    "scrolled": true
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "<class 'pandas.core.frame.DataFrame'>\n",
      "RangeIndex: 273641 entries, 0 to 273640\n",
      "Data columns (total 11 columns):\n",
      " #   Column             Non-Null Count   Dtype  \n",
      "---  ------             --------------   -----  \n",
      " 0   _id                273641 non-null  object \n",
      " 1   genres             263665 non-null  object \n",
      " 2   movie_id           273639 non-null  object \n",
      " 3   original_language  263665 non-null  object \n",
      " 4   overview           251139 non-null  object \n",
      " 5   popularity         263665 non-null  float64\n",
      " 6   release_date       260274 non-null  object \n",
      " 7   runtime            258982 non-null  float64\n",
      " 8   vote_average       263664 non-null  float64\n",
      " 9   vote_count         263664 non-null  float64\n",
      " 10  year_released      266602 non-null  float64\n",
      "dtypes: float64(5), object(6)\n",
      "memory usage: 23.0+ MB\n"
     ]
    }
   ],
   "source": [
    "movies_clean.info()"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "6b9ab0d7",
   "metadata": {},
   "source": [
    "We have floats and objects as datatypes which is fine."
   ]
  },
  {
   "cell_type": "markdown",
   "id": "fd57be74",
   "metadata": {},
   "source": [
    "#### Early EDA Insights\n",
    "* The Popularity, vote_average, and vote_count are actualy from The Movie Database and not scraped from Letterboxd. The kaggle dataset came with this feature.\n",
    "    * We will look at feature engineering this in from our ratings dataframe\n",
    "* We have 270k+ movies within our data frame, we are going to look at reducing that greatly. To start lets only select movies where:\n",
    "    * Original language is \"en\" or english\n",
    "    * Meet a certain minimum number of reviews we will determine\n",
    "    * Meet a minimum rating \n",
    "    \n",
    "**Note:** We will calculate the minimum number of reviews and minimum rating once we have brought them over from our Ratings table."
   ]
  },
  {
   "cell_type": "markdown",
   "id": "168df26b",
   "metadata": {},
   "source": [
    "Lets drop all rows where the overview is null. This will be a key feature within our machine learning model based on our data."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 14,
   "id": "2ea3fbc9",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>_id</th>\n",
       "      <th>genres</th>\n",
       "      <th>movie_id</th>\n",
       "      <th>original_language</th>\n",
       "      <th>overview</th>\n",
       "      <th>popularity</th>\n",
       "      <th>release_date</th>\n",
       "      <th>runtime</th>\n",
       "      <th>vote_average</th>\n",
       "      <th>vote_count</th>\n",
       "      <th>year_released</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>7</th>\n",
       "      <td>5fc85ff26758f696344ace53</td>\n",
       "      <td>[]</td>\n",
       "      <td>terra-di-transito</td>\n",
       "      <td>it</td>\n",
       "      <td>NaN</td>\n",
       "      <td>0.600</td>\n",
       "      <td>2014-09-11</td>\n",
       "      <td>0.0</td>\n",
       "      <td>5.0</td>\n",
       "      <td>2.0</td>\n",
       "      <td>2014.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>13</th>\n",
       "      <td>5fc85ff26758f696344acf13</td>\n",
       "      <td>[\"Comedy\"]</td>\n",
       "      <td>hochwurden-wird-papa</td>\n",
       "      <td>de</td>\n",
       "      <td>NaN</td>\n",
       "      <td>0.600</td>\n",
       "      <td>2003-05-23</td>\n",
       "      <td>89.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>2003.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>22</th>\n",
       "      <td>5fc85ff26758f696344ad0e3</td>\n",
       "      <td>NaN</td>\n",
       "      <td>k-on-live-house</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>2010.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>47</th>\n",
       "      <td>5fc85ff26758f696344ad0a2</td>\n",
       "      <td>[\"Music\",\"Comedy\"]</td>\n",
       "      <td>e-de-chua</td>\n",
       "      <td>pt</td>\n",
       "      <td>NaN</td>\n",
       "      <td>0.846</td>\n",
       "      <td>1958-01-01</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>1958.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>53</th>\n",
       "      <td>5fc85f606758f69634496feb</td>\n",
       "      <td>[]</td>\n",
       "      <td>paper-shoes</td>\n",
       "      <td>en</td>\n",
       "      <td>NaN</td>\n",
       "      <td>0.600</td>\n",
       "      <td>1972-01-01</td>\n",
       "      <td>8.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>1972.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>...</th>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>273622</th>\n",
       "      <td>61e2eb830109cc2a5d90e29c</td>\n",
       "      <td>NaN</td>\n",
       "      <td>komi-cant-communicate</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>2021.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>273634</th>\n",
       "      <td>61e333910109cc2a5da2c7ff</td>\n",
       "      <td>NaN</td>\n",
       "      <td>film:771692</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>273635</th>\n",
       "      <td>61e34d160109cc2a5da8c79e</td>\n",
       "      <td>NaN</td>\n",
       "      <td>suburban-knights-2</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>273636</th>\n",
       "      <td>61e34d160109cc2a5da8c79f</td>\n",
       "      <td>NaN</td>\n",
       "      <td>to-boldly-flee-2</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>273637</th>\n",
       "      <td>61e34d160109cc2a5da8c7a2</td>\n",
       "      <td>NaN</td>\n",
       "      <td>kickassia-2010</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "<p>22502 rows × 11 columns</p>\n",
       "</div>"
      ],
      "text/plain": [
       "                             _id              genres               movie_id  \\\n",
       "7       5fc85ff26758f696344ace53                  []      terra-di-transito   \n",
       "13      5fc85ff26758f696344acf13          [\"Comedy\"]   hochwurden-wird-papa   \n",
       "22      5fc85ff26758f696344ad0e3                 NaN        k-on-live-house   \n",
       "47      5fc85ff26758f696344ad0a2  [\"Music\",\"Comedy\"]              e-de-chua   \n",
       "53      5fc85f606758f69634496feb                  []            paper-shoes   \n",
       "...                          ...                 ...                    ...   \n",
       "273622  61e2eb830109cc2a5d90e29c                 NaN  komi-cant-communicate   \n",
       "273634  61e333910109cc2a5da2c7ff                 NaN            film:771692   \n",
       "273635  61e34d160109cc2a5da8c79e                 NaN     suburban-knights-2   \n",
       "273636  61e34d160109cc2a5da8c79f                 NaN       to-boldly-flee-2   \n",
       "273637  61e34d160109cc2a5da8c7a2                 NaN         kickassia-2010   \n",
       "\n",
       "       original_language overview  popularity release_date  runtime  \\\n",
       "7                     it      NaN       0.600   2014-09-11      0.0   \n",
       "13                    de      NaN       0.600   2003-05-23     89.0   \n",
       "22                   NaN      NaN         NaN          NaN      NaN   \n",
       "47                    pt      NaN       0.846   1958-01-01      0.0   \n",
       "53                    en      NaN       0.600   1972-01-01      8.0   \n",
       "...                  ...      ...         ...          ...      ...   \n",
       "273622               NaN      NaN         NaN          NaN      NaN   \n",
       "273634               NaN      NaN         NaN          NaN      NaN   \n",
       "273635               NaN      NaN         NaN          NaN      NaN   \n",
       "273636               NaN      NaN         NaN          NaN      NaN   \n",
       "273637               NaN      NaN         NaN          NaN      NaN   \n",
       "\n",
       "        vote_average  vote_count  year_released  \n",
       "7                5.0         2.0         2014.0  \n",
       "13               0.0         0.0         2003.0  \n",
       "22               NaN         NaN         2010.0  \n",
       "47               0.0         0.0         1958.0  \n",
       "53               0.0         0.0         1972.0  \n",
       "...              ...         ...            ...  \n",
       "273622           NaN         NaN         2021.0  \n",
       "273634           NaN         NaN            NaN  \n",
       "273635           NaN         NaN            NaN  \n",
       "273636           NaN         NaN            NaN  \n",
       "273637           NaN         NaN            NaN  \n",
       "\n",
       "[22502 rows x 11 columns]"
      ]
     },
     "execution_count": 14,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "movies_clean.loc[pd.isna(movies['overview'])]"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 15,
   "id": "c8bfdfc1",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "0.08223182929458671"
      ]
     },
     "execution_count": 15,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "#Percent of movies in dataset with null in overview column\n",
    "movies_clean.loc[pd.isna(movies['overview'])].shape[0] / movies_clean.shape[0]"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "78ba2014",
   "metadata": {},
   "source": [
    "8% of our movies have null values within the overview column. We will go ahead and drop these."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 10,
   "id": "d0fc9223",
   "metadata": {},
   "outputs": [
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "/var/folders/bm/khpbl2351cn5d9k4dq8zj0x40000gn/T/ipykernel_17952/3976231697.py:2: SettingWithCopyWarning: \n",
      "A value is trying to be set on a copy of a slice from a DataFrame\n",
      "\n",
      "See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n",
      "  movies_clean.dropna(subset=['overview'], inplace=True)\n"
     ]
    }
   ],
   "source": [
    "# Drop rows where 'overview' column is NaN\n",
    "movies_clean.dropna(subset=['overview'], inplace=True)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 11,
   "id": "70efc342",
   "metadata": {
    "scrolled": true
   },
   "outputs": [
    {
     "data": {
      "text/plain": [
       "0"
      ]
     },
     "execution_count": 11,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "movies_clean.loc[pd.isna(movies_clean['overview'])].shape[0]"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "3ec4b601",
   "metadata": {},
   "source": [
    "Better!"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "e4df0c3e",
   "metadata": {},
   "source": [
    "For now lets see how many rows where original language is not english. \n",
    "\n",
    "We are going to continue wiht only english movies for now. We may drop a few good movies here, but that will be fairly edge case. We are operating under the assumption that most users will want to watch an english movie. "
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 12,
   "id": "7c8506f9",
   "metadata": {
    "scrolled": true
   },
   "outputs": [
    {
     "data": {
      "text/plain": [
       "93778"
      ]
     },
     "execution_count": 12,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "#Lets take a quick look at a sample of null valued original language movies \n",
    "#to make sure we arent dropping anything crazy\n",
    "movies_clean.loc[movies['original_language'] != 'en'].shape[0]\n"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "3de61dd2",
   "metadata": {},
   "source": [
    "93,778. Lets note this and we may come back to it later. "
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 13,
   "id": "3f448a2d",
   "metadata": {
    "scrolled": true
   },
   "outputs": [
    {
     "data": {
      "text/plain": [
       "157361"
      ]
     },
     "execution_count": 13,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "#All movies that have original language as english\n",
    "movies_clean.loc[movies_clean['original_language'] == 'en'].shape[0]"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 20,
   "id": "402646b9",
   "metadata": {
    "scrolled": false
   },
   "outputs": [
    {
     "data": {
      "text/plain": [
       "0.3734107406655279"
      ]
     },
     "execution_count": 20,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "#Movies that are not english orignally over all the movie in our data\n",
    "movies_clean.loc[movies_clean['original_language'] != 'en'].shape[0] / movies_clean.shape[0]"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "9da33d36",
   "metadata": {},
   "source": [
    "Lets continue and drop all non-english movies. We have plenty of english movies to work with with 157,361 english movies.\n",
    "\n",
    "We are assuming that most users who will use our reccomender will want to watch an english movie"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 14,
   "id": "1e08298c",
   "metadata": {},
   "outputs": [],
   "source": [
    "#Dropping all non-englsih movies\n",
    "movies_clean = movies_clean.loc[movies['original_language'] == 'en']"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "da8a4ec2",
   "metadata": {},
   "source": [
    "Lets check on our nulls again:"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 22,
   "id": "740247c0",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "_id                     0\n",
       "genres                  0\n",
       "movie_id                1\n",
       "original_language       0\n",
       "overview                0\n",
       "popularity              0\n",
       "release_date         2788\n",
       "runtime              2805\n",
       "vote_average            1\n",
       "vote_count              1\n",
       "year_released        2814\n",
       "dtype: int64"
      ]
     },
     "execution_count": 22,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "#Sum of nulls for each feature\n",
    "movies_clean.isnull().sum()"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "f02c7b72",
   "metadata": {},
   "source": [
    "Lets check as a percentage of total rows again."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 23,
   "id": "b27cbf62",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "_id                  0.000000\n",
       "genres               0.000000\n",
       "movie_id             0.000006\n",
       "original_language    0.000000\n",
       "overview             0.000000\n",
       "popularity           0.000000\n",
       "release_date         0.017717\n",
       "runtime              0.017825\n",
       "vote_average         0.000006\n",
       "vote_count           0.000006\n",
       "year_released        0.017882\n",
       "dtype: float64"
      ]
     },
     "execution_count": 23,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "#Percentage of nulls in each row\n",
    "movies_clean.isnull().sum() / movies_clean.shape[0]"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "db2f8649",
   "metadata": {},
   "source": [
    "Lets drop the movie that does not have movie_id"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 15,
   "id": "e4b9aaf3",
   "metadata": {},
   "outputs": [],
   "source": [
    "#Drop null movie id\n",
    "movies_clean.dropna(subset=['movie_id'], inplace=True)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 16,
   "id": "e0adc3db",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "_id                     0\n",
       "genres                  0\n",
       "movie_id                0\n",
       "original_language       0\n",
       "overview                0\n",
       "popularity              0\n",
       "release_date         2788\n",
       "runtime              2805\n",
       "vote_average            1\n",
       "vote_count              1\n",
       "year_released        2814\n",
       "dtype: int64"
      ]
     },
     "execution_count": 16,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "#Sum of nulls for each feature\n",
    "movies_clean.isnull().sum()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 26,
   "id": "eeb16245",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "<class 'pandas.core.frame.DataFrame'>\n",
      "Index: 157360 entries, 0 to 273640\n",
      "Data columns (total 11 columns):\n",
      " #   Column             Non-Null Count   Dtype  \n",
      "---  ------             --------------   -----  \n",
      " 0   _id                157360 non-null  object \n",
      " 1   genres             157360 non-null  object \n",
      " 2   movie_id           157360 non-null  object \n",
      " 3   original_language  157360 non-null  object \n",
      " 4   overview           157360 non-null  object \n",
      " 5   popularity         157360 non-null  float64\n",
      " 6   release_date       154572 non-null  object \n",
      " 7   runtime            154555 non-null  float64\n",
      " 8   vote_average       157359 non-null  float64\n",
      " 9   vote_count         157359 non-null  float64\n",
      " 10  year_released      154546 non-null  float64\n",
      "dtypes: float64(5), object(6)\n",
      "memory usage: 14.4+ MB\n"
     ]
    }
   ],
   "source": [
    "movies_clean.info()"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "e9feb7f7",
   "metadata": {},
   "source": [
    "For all of our numerical columns lets fill in with median values:\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 17,
   "id": "4e43e466",
   "metadata": {},
   "outputs": [],
   "source": [
    "numerical_columns = ['vote_average', 'vote_count', 'runtime','year_released']\n",
    "\n",
    "# Replace nulls in numerical columns with their respective medians\n",
    "for column in numerical_columns:\n",
    "    median_value = movies_clean[column].median()\n",
    "    movies_clean[column].fillna(median_value, inplace=True)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 28,
   "id": "682f720c",
   "metadata": {
    "scrolled": true
   },
   "outputs": [
    {
     "data": {
      "text/plain": [
       "_id                     0\n",
       "genres                  0\n",
       "movie_id                0\n",
       "original_language       0\n",
       "overview                0\n",
       "popularity              0\n",
       "release_date         2788\n",
       "runtime                 0\n",
       "vote_average            0\n",
       "vote_count              0\n",
       "year_released           0\n",
       "dtype: int64"
      ]
     },
     "execution_count": 28,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "#Sanity check\n",
    "movies_clean.isnull().sum()"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "c9c0ec17",
   "metadata": {},
   "source": [
    "Finally we will fill our nulls within release date with a placehold:"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 18,
   "id": "872e41cb",
   "metadata": {},
   "outputs": [],
   "source": [
    "# Replace nulls in 'release_date' column with a placeholder\n",
    "movies_clean['release_date'].fillna('Not Available', inplace=True)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 30,
   "id": "a106f0ce",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "_id                  0\n",
       "genres               0\n",
       "movie_id             0\n",
       "original_language    0\n",
       "overview             0\n",
       "popularity           0\n",
       "release_date         0\n",
       "runtime              0\n",
       "vote_average         0\n",
       "vote_count           0\n",
       "year_released        0\n",
       "dtype: int64"
      ]
     },
     "execution_count": 30,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "movies_clean.isnull().sum()"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "9bebef53",
   "metadata": {},
   "source": [
    "Perfect! We are ready to move on. Here is our remaining movies table:"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 19,
   "id": "45849775",
   "metadata": {
    "scrolled": true
   },
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>_id</th>\n",
       "      <th>genres</th>\n",
       "      <th>movie_id</th>\n",
       "      <th>original_language</th>\n",
       "      <th>overview</th>\n",
       "      <th>popularity</th>\n",
       "      <th>release_date</th>\n",
       "      <th>runtime</th>\n",
       "      <th>vote_average</th>\n",
       "      <th>vote_count</th>\n",
       "      <th>year_released</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>5fc85f606758f69634496fd3</td>\n",
       "      <td>[\"Music\",\"Animation\"]</td>\n",
       "      <td>football-freaks</td>\n",
       "      <td>en</td>\n",
       "      <td>Football crazy, football mad. Don’t watch this...</td>\n",
       "      <td>0.600</td>\n",
       "      <td>1971-12-05</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>1971.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>5fc85ff26758f696344ace0c</td>\n",
       "      <td>[]</td>\n",
       "      <td>aftermath-1960</td>\n",
       "      <td>en</td>\n",
       "      <td>Aftermath was the pilot for an unsold TV serie...</td>\n",
       "      <td>0.600</td>\n",
       "      <td>1960-04-17</td>\n",
       "      <td>22.0</td>\n",
       "      <td>8.0</td>\n",
       "      <td>1.0</td>\n",
       "      <td>1960.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>5fc85f606758f69634496fd1</td>\n",
       "      <td>[\"Drama\"]</td>\n",
       "      <td>the-musicians-daughter</td>\n",
       "      <td>en</td>\n",
       "      <td>Carl Wagner's good wife was dying. His heart b...</td>\n",
       "      <td>0.600</td>\n",
       "      <td>1911-12-12</td>\n",
       "      <td>15.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>1911.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>5fc85f606758f69634496fd4</td>\n",
       "      <td>[\"Documentary\"]</td>\n",
       "      <td>50-years-of-fabulous</td>\n",
       "      <td>en</td>\n",
       "      <td>50 Years of Fabulous recounts the rich history...</td>\n",
       "      <td>0.600</td>\n",
       "      <td>2018-05-17</td>\n",
       "      <td>75.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>2018.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>5</th>\n",
       "      <td>5fc85ff26758f696344ace3a</td>\n",
       "      <td>[\"Romance\"]</td>\n",
       "      <td>where-love-has-gone</td>\n",
       "      <td>en</td>\n",
       "      <td>A divorced couple's teen-age daughter stands t...</td>\n",
       "      <td>2.304</td>\n",
       "      <td>1964-11-02</td>\n",
       "      <td>111.0</td>\n",
       "      <td>6.1</td>\n",
       "      <td>11.0</td>\n",
       "      <td>1964.0</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "                        _id                 genres                movie_id  \\\n",
       "0  5fc85f606758f69634496fd3  [\"Music\",\"Animation\"]         football-freaks   \n",
       "1  5fc85ff26758f696344ace0c                     []          aftermath-1960   \n",
       "3  5fc85f606758f69634496fd1              [\"Drama\"]  the-musicians-daughter   \n",
       "4  5fc85f606758f69634496fd4        [\"Documentary\"]    50-years-of-fabulous   \n",
       "5  5fc85ff26758f696344ace3a            [\"Romance\"]     where-love-has-gone   \n",
       "\n",
       "  original_language                                           overview  \\\n",
       "0                en  Football crazy, football mad. Don’t watch this...   \n",
       "1                en  Aftermath was the pilot for an unsold TV serie...   \n",
       "3                en  Carl Wagner's good wife was dying. His heart b...   \n",
       "4                en  50 Years of Fabulous recounts the rich history...   \n",
       "5                en  A divorced couple's teen-age daughter stands t...   \n",
       "\n",
       "   popularity release_date  runtime  vote_average  vote_count  year_released  \n",
       "0       0.600   1971-12-05      0.0           0.0         0.0         1971.0  \n",
       "1       0.600   1960-04-17     22.0           8.0         1.0         1960.0  \n",
       "3       0.600   1911-12-12     15.0           0.0         0.0         1911.0  \n",
       "4       0.600   2018-05-17     75.0           0.0         0.0         2018.0  \n",
       "5       2.304   1964-11-02    111.0           6.1        11.0         1964.0  "
      ]
     },
     "execution_count": 19,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "#Sanity check\n",
    "movies_clean.head()"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "5f74331a",
   "metadata": {},
   "source": [
    "Lets save our df to checkpoint our progress."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 20,
   "id": "a1e01f08",
   "metadata": {},
   "outputs": [],
   "source": [
    "# Save the DataFrame as a CSV file\n",
    "movies_clean.to_csv('data/movies_data_clean.csv', index=False)"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "b6c30df2",
   "metadata": {},
   "source": [
    "## Ratings EDA & Feature Engineering\n",
    "Now lets take a look at our ratings table we loaded previously."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 21,
   "id": "2ec59956",
   "metadata": {
    "scrolled": true
   },
   "outputs": [
    {
     "data": {
      "text/plain": [
       "(11078167, 4)"
      ]
     },
     "execution_count": 21,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "ratings.shape"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 33,
   "id": "56eae992",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>_id</th>\n",
       "      <th>movie_id</th>\n",
       "      <th>rating_val</th>\n",
       "      <th>user_id</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>5fc57c5d6758f6963451a07f</td>\n",
       "      <td>feast-2014</td>\n",
       "      <td>7</td>\n",
       "      <td>deathproof</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>5fc57c5d6758f6963451a063</td>\n",
       "      <td>loving-2016</td>\n",
       "      <td>7</td>\n",
       "      <td>deathproof</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>5fc57c5d6758f6963451a0ef</td>\n",
       "      <td>scripted-content</td>\n",
       "      <td>7</td>\n",
       "      <td>deathproof</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>5fc57c5d6758f6963451a060</td>\n",
       "      <td>the-future</td>\n",
       "      <td>4</td>\n",
       "      <td>deathproof</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>5fc57c5c6758f69634519398</td>\n",
       "      <td>mank</td>\n",
       "      <td>5</td>\n",
       "      <td>deathproof</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "                        _id          movie_id  rating_val     user_id\n",
       "0  5fc57c5d6758f6963451a07f        feast-2014           7  deathproof\n",
       "1  5fc57c5d6758f6963451a063       loving-2016           7  deathproof\n",
       "2  5fc57c5d6758f6963451a0ef  scripted-content           7  deathproof\n",
       "3  5fc57c5d6758f6963451a060        the-future           4  deathproof\n",
       "4  5fc57c5c6758f69634519398              mank           5  deathproof"
      ]
     },
     "execution_count": 33,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "ratings.head()"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "8ade708c",
   "metadata": {},
   "source": [
    "**We have 11,078,167 ratings** within our data set which is plenty. We are going to calculate the average score and the total count of ratings for each movie using this set and then merge it with the Movies data.\n",
    "\n",
    "The 4 columns we have here are sufficient to match with the other data sets. Lets take an early look at the distribution of reviews per user:"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 34,
   "id": "32c680af",
   "metadata": {
    "scrolled": true
   },
   "outputs": [
    {
     "data": {
      "image/png": "",
      "text/plain": [
       "<Figure size 1000x600 with 1 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "# Counting the number of reviews per user by grouping\n",
    "reviews_per_user = ratings.groupby('user_id').size()\n",
    "\n",
    "# Calculate mean and median reviews per user\n",
    "mean_reviews = reviews_per_user.mean()\n",
    "median_reviews = reviews_per_user.median()\n",
    "\n",
    "# Plotting the distribution of reviews by users\n",
    "plt.figure(figsize=(10, 6))\n",
    "plt.hist(reviews_per_user, bins=3000, color='skyblue', edgecolor='black')\n",
    "plt.xlabel('Number of Reviews')\n",
    "plt.ylabel('Number of Users')\n",
    "plt.title('Distribution of Reviews by Users')\n",
    "plt.grid(axis='y', linestyle='--', alpha=0.5)\n",
    "plt.xlim(0, 7500)  # Limiting x-axis to focus on majority of users\n",
    "plt.tight_layout()\n",
    "\n",
    "# Add mean and median to the plot\n",
    "plt.axvline(mean_reviews, color='red', linestyle='dashed', linewidth=1, label=f'Mean: {mean_reviews:.2f}')\n",
    "plt.axvline(median_reviews, color='green', linestyle='dashed', linewidth=1, label=f'Median: {median_reviews:.2f}')\n",
    "plt.legend()\n",
    "\n",
    "plt.show()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "91b3291f",
   "metadata": {},
   "outputs": [],
   "source": []
  },
  {
   "cell_type": "code",
   "execution_count": 35,
   "id": "5206ae1e",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>_id</th>\n",
       "      <th>movie_id</th>\n",
       "      <th>rating_val</th>\n",
       "      <th>user_id</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>74057</th>\n",
       "      <td>5fc57d5c6758f69634579cc0</td>\n",
       "      <td>the-american-dreamer</td>\n",
       "      <td>7</td>\n",
       "      <td>zoltarak</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1893615</th>\n",
       "      <td>5fc5923d6758f69634e71a21</td>\n",
       "      <td>hold-the-dark</td>\n",
       "      <td>3</td>\n",
       "      <td>moxleyox</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>8940142</th>\n",
       "      <td>61377f414385873fc40dee42</td>\n",
       "      <td>heathers</td>\n",
       "      <td>8</td>\n",
       "      <td>filmstar92</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>674335</th>\n",
       "      <td>5fc584756758f6963484aabb</td>\n",
       "      <td>deep-red</td>\n",
       "      <td>6</td>\n",
       "      <td>marooncrimson</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3853766</th>\n",
       "      <td>5fc5aa9d6758f6963487eb98</td>\n",
       "      <td>the-house-that-jack-built-2018</td>\n",
       "      <td>9</td>\n",
       "      <td>isaacramen</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>7707226</th>\n",
       "      <td>60883dce28f29d0115e70419</td>\n",
       "      <td>the-bitter-tears-of-petra-von-kant</td>\n",
       "      <td>6</td>\n",
       "      <td>go2damoon</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2919803</th>\n",
       "      <td>5fc59f9a6758f696343ca9b2</td>\n",
       "      <td>grandmas-boy-2006</td>\n",
       "      <td>4</td>\n",
       "      <td>ben_roberts</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>7698172</th>\n",
       "      <td>60883dc428f29d0115e6e17b</td>\n",
       "      <td>hail-caesar-2016</td>\n",
       "      <td>5</td>\n",
       "      <td>icharly_com</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>9412907</th>\n",
       "      <td>61813de3b2ba108466e0bec0</td>\n",
       "      <td>senna</td>\n",
       "      <td>10</td>\n",
       "      <td>krnxly</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3891607</th>\n",
       "      <td>5fc5ab076758f696348b585b</td>\n",
       "      <td>spy-kids</td>\n",
       "      <td>6</td>\n",
       "      <td>samjanoble</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "                              _id                            movie_id  \\\n",
       "74057    5fc57d5c6758f69634579cc0                the-american-dreamer   \n",
       "1893615  5fc5923d6758f69634e71a21                       hold-the-dark   \n",
       "8940142  61377f414385873fc40dee42                            heathers   \n",
       "674335   5fc584756758f6963484aabb                            deep-red   \n",
       "3853766  5fc5aa9d6758f6963487eb98      the-house-that-jack-built-2018   \n",
       "7707226  60883dce28f29d0115e70419  the-bitter-tears-of-petra-von-kant   \n",
       "2919803  5fc59f9a6758f696343ca9b2                   grandmas-boy-2006   \n",
       "7698172  60883dc428f29d0115e6e17b                    hail-caesar-2016   \n",
       "9412907  61813de3b2ba108466e0bec0                               senna   \n",
       "3891607  5fc5ab076758f696348b585b                            spy-kids   \n",
       "\n",
       "         rating_val        user_id  \n",
       "74057             7       zoltarak  \n",
       "1893615           3       moxleyox  \n",
       "8940142           8     filmstar92  \n",
       "674335            6  marooncrimson  \n",
       "3853766           9     isaacramen  \n",
       "7707226           6      go2damoon  \n",
       "2919803           4    ben_roberts  \n",
       "7698172           5    icharly_com  \n",
       "9412907          10         krnxly  \n",
       "3891607           6     samjanoble  "
      ]
     },
     "execution_count": 35,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "ratings.sample(10)"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "aac9115f",
   "metadata": {},
   "source": [
    "Lets check for nulls within our ratings data:"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 36,
   "id": "787bfd0b",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "_id           0\n",
       "movie_id      6\n",
       "rating_val    0\n",
       "user_id       0\n",
       "dtype: int64"
      ]
     },
     "execution_count": 36,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "ratings.isnull().sum()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 37,
   "id": "45f662f3",
   "metadata": {
    "scrolled": true
   },
   "outputs": [
    {
     "data": {
      "text/plain": [
       "_id           0.000000e+00\n",
       "movie_id      5.416058e-07\n",
       "rating_val    0.000000e+00\n",
       "user_id       0.000000e+00\n",
       "dtype: float64"
      ]
     },
     "execution_count": 37,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "ratings.isnull().sum() / ratings.shape[0]"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "db27e4d5",
   "metadata": {},
   "source": [
    "We have a very negligible amount of nulls and they are all within our movie_id column. Lets take a quick peak at what the rows look like before we drop them."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 38,
   "id": "d7396024",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>_id</th>\n",
       "      <th>movie_id</th>\n",
       "      <th>rating_val</th>\n",
       "      <th>user_id</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>6766340</th>\n",
       "      <td>5fd05e0ab89a841f5b224790</td>\n",
       "      <td>NaN</td>\n",
       "      <td>6</td>\n",
       "      <td>ghettominibar</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>6783993</th>\n",
       "      <td>5fd070c6b89a841f5b22a472</td>\n",
       "      <td>NaN</td>\n",
       "      <td>10</td>\n",
       "      <td>lancelubelski</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>6785171</th>\n",
       "      <td>5fd072a5b89a841f5b22acb6</td>\n",
       "      <td>NaN</td>\n",
       "      <td>6</td>\n",
       "      <td>deepbluefunk</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>7070391</th>\n",
       "      <td>600c858fba1595b3679dacd2</td>\n",
       "      <td>NaN</td>\n",
       "      <td>5</td>\n",
       "      <td>welovemovies</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>7306719</th>\n",
       "      <td>6088259e28f29d0115e0c920</td>\n",
       "      <td>NaN</td>\n",
       "      <td>7</td>\n",
       "      <td>ghettominibar</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>8492587</th>\n",
       "      <td>60fc5207d72bb4dd0a693e08</td>\n",
       "      <td>NaN</td>\n",
       "      <td>5</td>\n",
       "      <td>acervofilmico</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "                              _id movie_id  rating_val        user_id\n",
       "6766340  5fd05e0ab89a841f5b224790      NaN           6  ghettominibar\n",
       "6783993  5fd070c6b89a841f5b22a472      NaN          10  lancelubelski\n",
       "6785171  5fd072a5b89a841f5b22acb6      NaN           6   deepbluefunk\n",
       "7070391  600c858fba1595b3679dacd2      NaN           5   welovemovies\n",
       "7306719  6088259e28f29d0115e0c920      NaN           7  ghettominibar\n",
       "8492587  60fc5207d72bb4dd0a693e08      NaN           5  acervofilmico"
      ]
     },
     "execution_count": 38,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "ratings[ratings['movie_id'].isnull()]"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "69d6f3f9",
   "metadata": {},
   "source": [
    "We will go ahead and drop these."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 39,
   "id": "434c6dd6",
   "metadata": {},
   "outputs": [],
   "source": [
    "# Drop rows where 'movie_id' column has null values in place\n",
    "ratings.dropna(subset=['movie_id'], inplace=True)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 40,
   "id": "604fe812",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "(11078161, 4)"
      ]
     },
     "execution_count": 40,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "#Sanity Check\n",
    "ratings.shape"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "9205b9bd",
   "metadata": {},
   "source": [
    "This is 6 rows less than our old dataframe, as we expected."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 41,
   "id": "67fb9da6",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>_id</th>\n",
       "      <th>movie_id</th>\n",
       "      <th>rating_val</th>\n",
       "      <th>user_id</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>5fc57c5d6758f6963451a07f</td>\n",
       "      <td>feast-2014</td>\n",
       "      <td>7</td>\n",
       "      <td>deathproof</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>5fc57c5d6758f6963451a063</td>\n",
       "      <td>loving-2016</td>\n",
       "      <td>7</td>\n",
       "      <td>deathproof</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>5fc57c5d6758f6963451a0ef</td>\n",
       "      <td>scripted-content</td>\n",
       "      <td>7</td>\n",
       "      <td>deathproof</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>5fc57c5d6758f6963451a060</td>\n",
       "      <td>the-future</td>\n",
       "      <td>4</td>\n",
       "      <td>deathproof</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>5fc57c5c6758f69634519398</td>\n",
       "      <td>mank</td>\n",
       "      <td>5</td>\n",
       "      <td>deathproof</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "                        _id          movie_id  rating_val     user_id\n",
       "0  5fc57c5d6758f6963451a07f        feast-2014           7  deathproof\n",
       "1  5fc57c5d6758f6963451a063       loving-2016           7  deathproof\n",
       "2  5fc57c5d6758f6963451a0ef  scripted-content           7  deathproof\n",
       "3  5fc57c5d6758f6963451a060        the-future           4  deathproof\n",
       "4  5fc57c5c6758f69634519398              mank           5  deathproof"
      ]
     },
     "execution_count": 41,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "#Sanity Check\n",
    "ratings.head()"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "225fa41c",
   "metadata": {},
   "source": [
    "Looks all good here. "
   ]
  },
  {
   "cell_type": "markdown",
   "id": "98943524",
   "metadata": {},
   "source": [
    "Lets look at look at Raiders of the lost ark, see how many reviews we have and determine if we can merge this information onto our movies data. "
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 42,
   "id": "f6f6ddb2",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>_id</th>\n",
       "      <th>movie_id</th>\n",
       "      <th>rating_val</th>\n",
       "      <th>user_id</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>2334</th>\n",
       "      <td>5fc57c926758f6963453138a</td>\n",
       "      <td>raiders-of-the-lost-ark</td>\n",
       "      <td>10</td>\n",
       "      <td>kurstboy</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2340</th>\n",
       "      <td>5fc57c966758f6963453354d</td>\n",
       "      <td>raiders-of-the-lost-ark</td>\n",
       "      <td>8</td>\n",
       "      <td>davidehrlich</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>11798</th>\n",
       "      <td>5fc57cad6758f6963453f754</td>\n",
       "      <td>raiders-of-the-lost-ark</td>\n",
       "      <td>9</td>\n",
       "      <td>jay</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>12029</th>\n",
       "      <td>5fc57cb26758f696345415c4</td>\n",
       "      <td>raiders-of-the-lost-ark</td>\n",
       "      <td>9</td>\n",
       "      <td>superpulse</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>21367</th>\n",
       "      <td>5fc57cc26758f6963454ae97</td>\n",
       "      <td>raiders-of-the-lost-ark</td>\n",
       "      <td>8</td>\n",
       "      <td>ianamurray</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>...</th>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>11041613</th>\n",
       "      <td>6239dd5aa936b95600a99f0a</td>\n",
       "      <td>raiders-of-the-lost-ark</td>\n",
       "      <td>8</td>\n",
       "      <td>anjyfox</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>11043503</th>\n",
       "      <td>6239dddaa936b95600a9decc</td>\n",
       "      <td>raiders-of-the-lost-ark</td>\n",
       "      <td>10</td>\n",
       "      <td>sheldond</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>11065595</th>\n",
       "      <td>6239e3b5a936b95600ad1a59</td>\n",
       "      <td>raiders-of-the-lost-ark</td>\n",
       "      <td>8</td>\n",
       "      <td>jacfer</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>11072216</th>\n",
       "      <td>6239e55ba936b95600ae25de</td>\n",
       "      <td>raiders-of-the-lost-ark</td>\n",
       "      <td>8</td>\n",
       "      <td>poellnerson</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>11074537</th>\n",
       "      <td>6239e58ca936b95600ae5bfb</td>\n",
       "      <td>raiders-of-the-lost-ark</td>\n",
       "      <td>8</td>\n",
       "      <td>cbumaa</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "<p>3908 rows × 4 columns</p>\n",
       "</div>"
      ],
      "text/plain": [
       "                               _id                 movie_id  rating_val  \\\n",
       "2334      5fc57c926758f6963453138a  raiders-of-the-lost-ark          10   \n",
       "2340      5fc57c966758f6963453354d  raiders-of-the-lost-ark           8   \n",
       "11798     5fc57cad6758f6963453f754  raiders-of-the-lost-ark           9   \n",
       "12029     5fc57cb26758f696345415c4  raiders-of-the-lost-ark           9   \n",
       "21367     5fc57cc26758f6963454ae97  raiders-of-the-lost-ark           8   \n",
       "...                            ...                      ...         ...   \n",
       "11041613  6239dd5aa936b95600a99f0a  raiders-of-the-lost-ark           8   \n",
       "11043503  6239dddaa936b95600a9decc  raiders-of-the-lost-ark          10   \n",
       "11065595  6239e3b5a936b95600ad1a59  raiders-of-the-lost-ark           8   \n",
       "11072216  6239e55ba936b95600ae25de  raiders-of-the-lost-ark           8   \n",
       "11074537  6239e58ca936b95600ae5bfb  raiders-of-the-lost-ark           8   \n",
       "\n",
       "               user_id  \n",
       "2334          kurstboy  \n",
       "2340      davidehrlich  \n",
       "11798              jay  \n",
       "12029       superpulse  \n",
       "21367       ianamurray  \n",
       "...                ...  \n",
       "11041613       anjyfox  \n",
       "11043503      sheldond  \n",
       "11065595        jacfer  \n",
       "11072216   poellnerson  \n",
       "11074537        cbumaa  \n",
       "\n",
       "[3908 rows x 4 columns]"
      ]
     },
     "execution_count": 42,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "ratings.loc[ratings['movie_id']==\"raiders-of-the-lost-ark\"]"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "ff09b1f1",
   "metadata": {},
   "source": [
    "we can see we have 3908 reviews for Raiders of the Lost Arc. Lets look to see if we can pair raiders-of-the-lost-ark with our movies data set on movie_id (We were told on kaggle that we could merge using this column)."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 43,
   "id": "9e113b66",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>_id</th>\n",
       "      <th>genres</th>\n",
       "      <th>image_url</th>\n",
       "      <th>imdb_id</th>\n",
       "      <th>imdb_link</th>\n",
       "      <th>movie_id</th>\n",
       "      <th>movie_title</th>\n",
       "      <th>original_language</th>\n",
       "      <th>overview</th>\n",
       "      <th>popularity</th>\n",
       "      <th>production_countries</th>\n",
       "      <th>release_date</th>\n",
       "      <th>runtime</th>\n",
       "      <th>spoken_languages</th>\n",
       "      <th>tmdb_id</th>\n",
       "      <th>tmdb_link</th>\n",
       "      <th>vote_average</th>\n",
       "      <th>vote_count</th>\n",
       "      <th>year_released</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>3713</th>\n",
       "      <td>5fc86a4c6758f6963478d502</td>\n",
       "      <td>[\"Adventure\",\"Action\"]</td>\n",
       "      <td>sm/upload/oz/di/0n/js/mkDExQxNWZug5T9dtVdng7ou...</td>\n",
       "      <td>tt0082971</td>\n",
       "      <td>http://www.imdb.com/title/tt0082971/maindetails</td>\n",
       "      <td>raiders-of-the-lost-ark</td>\n",
       "      <td>Raiders of the Lost Ark</td>\n",
       "      <td>en</td>\n",
       "      <td>When Dr. Indiana Jones – the tweed-suited prof...</td>\n",
       "      <td>30.782</td>\n",
       "      <td>[\"United States of America\"]</td>\n",
       "      <td>1981-06-12</td>\n",
       "      <td>115.0</td>\n",
       "      <td>[\"English\",\"Español\",\"Deutsch\",\"עִבְרִית\",\"الع...</td>\n",
       "      <td>85.0</td>\n",
       "      <td>https://www.themoviedb.org/movie/85/</td>\n",
       "      <td>7.9</td>\n",
       "      <td>9581.0</td>\n",
       "      <td>1981.0</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "                           _id                  genres  \\\n",
       "3713  5fc86a4c6758f6963478d502  [\"Adventure\",\"Action\"]   \n",
       "\n",
       "                                              image_url    imdb_id  \\\n",
       "3713  sm/upload/oz/di/0n/js/mkDExQxNWZug5T9dtVdng7ou...  tt0082971   \n",
       "\n",
       "                                            imdb_link  \\\n",
       "3713  http://www.imdb.com/title/tt0082971/maindetails   \n",
       "\n",
       "                     movie_id              movie_title original_language  \\\n",
       "3713  raiders-of-the-lost-ark  Raiders of the Lost Ark                en   \n",
       "\n",
       "                                               overview  popularity  \\\n",
       "3713  When Dr. Indiana Jones – the tweed-suited prof...      30.782   \n",
       "\n",
       "              production_countries release_date  runtime  \\\n",
       "3713  [\"United States of America\"]   1981-06-12    115.0   \n",
       "\n",
       "                                       spoken_languages  tmdb_id  \\\n",
       "3713  [\"English\",\"Español\",\"Deutsch\",\"עִבְרִית\",\"الع...     85.0   \n",
       "\n",
       "                                 tmdb_link  vote_average  vote_count  \\\n",
       "3713  https://www.themoviedb.org/movie/85/           7.9      9581.0   \n",
       "\n",
       "      year_released  \n",
       "3713         1981.0  "
      ]
     },
     "execution_count": 43,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "#Checking if the ratings movie_id matches the movies movie_id\n",
    "movies.loc[movies['movie_id']==\"raiders-of-the-lost-ark\"]"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "bdaea7e2",
   "metadata": {},
   "source": [
    "Perfect! As our data set indicated to us on Kaggle, we can join our tables on movie_id."
   ]
  },
  {
   "cell_type": "markdown",
   "id": "49975f34",
   "metadata": {},
   "source": [
    "#### Ratings Feature Engineering & EDA contd.\n",
    "Before we join ratings on movies lets calculate a new dataframe that will hold the average rating for each movie within our ratings data, as well as do a count of how many ratings it has."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 22,
   "id": "6ca285fd",
   "metadata": {},
   "outputs": [],
   "source": [
    "# Calculate average rating and count of ratings per movie\n",
    "movie_ratings_summary = ratings.groupby('movie_id')['rating_val'].agg(['mean', 'count']).reset_index()\n",
    "\n",
    "# Rename columns for clarity\n",
    "movie_ratings_summary.columns = ['movie_id', 'avg_rating', 'rating_count']\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 23,
   "id": "8f52b069",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "(286070, 3)"
      ]
     },
     "execution_count": 23,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "movie_ratings_summary.shape"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "10a7074d",
   "metadata": {},
   "source": [
    "From our approximately 11 million reviews, we have a total of 286,070 unique movies."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 24,
   "id": "73a11c43",
   "metadata": {
    "scrolled": true
   },
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>movie_id</th>\n",
       "      <th>avg_rating</th>\n",
       "      <th>rating_count</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>96449</th>\n",
       "      <td>handsome-harry</td>\n",
       "      <td>4.000000</td>\n",
       "      <td>7</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>66304</th>\n",
       "      <td>down-the-stretch</td>\n",
       "      <td>6.000000</td>\n",
       "      <td>3</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>258612</th>\n",
       "      <td>this-is-not-a-song-of-hope</td>\n",
       "      <td>5.000000</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>263611</th>\n",
       "      <td>traces-of-death-iii</td>\n",
       "      <td>3.200000</td>\n",
       "      <td>5</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>160268</th>\n",
       "      <td>norwegian-woods</td>\n",
       "      <td>6.750000</td>\n",
       "      <td>4</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>85857</th>\n",
       "      <td>frammenti-elettrici-n-7-gypsies-toward-bamyan</td>\n",
       "      <td>7.500000</td>\n",
       "      <td>2</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>56549</th>\n",
       "      <td>dawn-of-a-filmmaker-the-keisuke-kinoshita-story</td>\n",
       "      <td>6.500000</td>\n",
       "      <td>2</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>216495</th>\n",
       "      <td>the-animated-poster</td>\n",
       "      <td>3.500000</td>\n",
       "      <td>2</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>114668</th>\n",
       "      <td>james-dean-and-me</td>\n",
       "      <td>6.666667</td>\n",
       "      <td>3</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>256348</th>\n",
       "      <td>the-wiseman</td>\n",
       "      <td>6.444444</td>\n",
       "      <td>36</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>104382</th>\n",
       "      <td>house-of-the-damned-1974</td>\n",
       "      <td>3.666667</td>\n",
       "      <td>3</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>31890</th>\n",
       "      <td>black-magic-woman</td>\n",
       "      <td>3.700000</td>\n",
       "      <td>10</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>259940</th>\n",
       "      <td>thy-kill-be-done</td>\n",
       "      <td>6.000000</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>284546</th>\n",
       "      <td>youp-van-t-hek-omdat-de-nacht</td>\n",
       "      <td>6.000000</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>113109</th>\n",
       "      <td>ismail-yassine-and-the-ghost</td>\n",
       "      <td>7.000000</td>\n",
       "      <td>2</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>130848</th>\n",
       "      <td>liars-dice</td>\n",
       "      <td>5.882353</td>\n",
       "      <td>17</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>195745</th>\n",
       "      <td>shakespeare-or-bust</td>\n",
       "      <td>7.200000</td>\n",
       "      <td>5</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>213844</th>\n",
       "      <td>tell-me-a-tale-upon-the-tides-of-remembering</td>\n",
       "      <td>9.000000</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>230542</th>\n",
       "      <td>the-grace-lee-project</td>\n",
       "      <td>6.333333</td>\n",
       "      <td>3</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>68189</th>\n",
       "      <td>duplo-adventures</td>\n",
       "      <td>2.000000</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "                                               movie_id  avg_rating  \\\n",
       "96449                                    handsome-harry    4.000000   \n",
       "66304                                  down-the-stretch    6.000000   \n",
       "258612                       this-is-not-a-song-of-hope    5.000000   \n",
       "263611                              traces-of-death-iii    3.200000   \n",
       "160268                                  norwegian-woods    6.750000   \n",
       "85857     frammenti-elettrici-n-7-gypsies-toward-bamyan    7.500000   \n",
       "56549   dawn-of-a-filmmaker-the-keisuke-kinoshita-story    6.500000   \n",
       "216495                              the-animated-poster    3.500000   \n",
       "114668                                james-dean-and-me    6.666667   \n",
       "256348                                      the-wiseman    6.444444   \n",
       "104382                         house-of-the-damned-1974    3.666667   \n",
       "31890                                 black-magic-woman    3.700000   \n",
       "259940                                 thy-kill-be-done    6.000000   \n",
       "284546                    youp-van-t-hek-omdat-de-nacht    6.000000   \n",
       "113109                     ismail-yassine-and-the-ghost    7.000000   \n",
       "130848                                       liars-dice    5.882353   \n",
       "195745                              shakespeare-or-bust    7.200000   \n",
       "213844     tell-me-a-tale-upon-the-tides-of-remembering    9.000000   \n",
       "230542                            the-grace-lee-project    6.333333   \n",
       "68189                                  duplo-adventures    2.000000   \n",
       "\n",
       "        rating_count  \n",
       "96449              7  \n",
       "66304              3  \n",
       "258612             1  \n",
       "263611             5  \n",
       "160268             4  \n",
       "85857              2  \n",
       "56549              2  \n",
       "216495             2  \n",
       "114668             3  \n",
       "256348            36  \n",
       "104382             3  \n",
       "31890             10  \n",
       "259940             1  \n",
       "284546             1  \n",
       "113109             2  \n",
       "130848            17  \n",
       "195745             5  \n",
       "213844             1  \n",
       "230542             3  \n",
       "68189              1  "
      ]
     },
     "execution_count": 24,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "movie_ratings_summary.sample(20)"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "48eb3a85",
   "metadata": {},
   "source": [
    "Lets check out what our 20 most rated movies within our dataset are:"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 25,
   "id": "95022b6e",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>movie_id</th>\n",
       "      <th>avg_rating</th>\n",
       "      <th>rating_count</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>169341</th>\n",
       "      <td>parasite-2019</td>\n",
       "      <td>9.162221</td>\n",
       "      <td>5998</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>122544</th>\n",
       "      <td>knives-out-2019</td>\n",
       "      <td>7.996258</td>\n",
       "      <td>5612</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>90083</th>\n",
       "      <td>get-out-2017</td>\n",
       "      <td>8.299057</td>\n",
       "      <td>5514</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>116919</th>\n",
       "      <td>joker-2019</td>\n",
       "      <td>6.600256</td>\n",
       "      <td>5466</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>164285</th>\n",
       "      <td>once-upon-a-time-in-hollywood</td>\n",
       "      <td>7.760165</td>\n",
       "      <td>5337</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>204393</th>\n",
       "      <td>spider-man-into-the-spider-verse</td>\n",
       "      <td>8.669187</td>\n",
       "      <td>5290</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>23929</th>\n",
       "      <td>baby-driver</td>\n",
       "      <td>7.608329</td>\n",
       "      <td>5211</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>20785</th>\n",
       "      <td>arrival-2016</td>\n",
       "      <td>8.294613</td>\n",
       "      <td>5105</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>249041</th>\n",
       "      <td>the-shining</td>\n",
       "      <td>8.878580</td>\n",
       "      <td>5098</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>126079</th>\n",
       "      <td>lady-bird</td>\n",
       "      <td>8.114667</td>\n",
       "      <td>5093</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>230568</th>\n",
       "      <td>the-grand-budapest-hotel</td>\n",
       "      <td>8.461871</td>\n",
       "      <td>5088</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>110594</th>\n",
       "      <td>inception</td>\n",
       "      <td>8.187611</td>\n",
       "      <td>5069</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>223759</th>\n",
       "      <td>the-dark-knight</td>\n",
       "      <td>8.549644</td>\n",
       "      <td>5056</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>124644</th>\n",
       "      <td>la-la-land</td>\n",
       "      <td>8.185361</td>\n",
       "      <td>5055</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>92733</th>\n",
       "      <td>gone-girl</td>\n",
       "      <td>8.357028</td>\n",
       "      <td>4994</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>178578</th>\n",
       "      <td>pulp-fiction</td>\n",
       "      <td>8.722701</td>\n",
       "      <td>4991</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>278511</th>\n",
       "      <td>whiplash-2014</td>\n",
       "      <td>8.755524</td>\n",
       "      <td>4978</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>146456</th>\n",
       "      <td>midsommar</td>\n",
       "      <td>7.468957</td>\n",
       "      <td>4977</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>94773</th>\n",
       "      <td>guardians-of-the-galaxy</td>\n",
       "      <td>7.478419</td>\n",
       "      <td>4958</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>111087</th>\n",
       "      <td>inglourious-basterds</td>\n",
       "      <td>8.699797</td>\n",
       "      <td>4930</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "                                movie_id  avg_rating  rating_count\n",
       "169341                     parasite-2019    9.162221          5998\n",
       "122544                   knives-out-2019    7.996258          5612\n",
       "90083                       get-out-2017    8.299057          5514\n",
       "116919                        joker-2019    6.600256          5466\n",
       "164285     once-upon-a-time-in-hollywood    7.760165          5337\n",
       "204393  spider-man-into-the-spider-verse    8.669187          5290\n",
       "23929                        baby-driver    7.608329          5211\n",
       "20785                       arrival-2016    8.294613          5105\n",
       "249041                       the-shining    8.878580          5098\n",
       "126079                         lady-bird    8.114667          5093\n",
       "230568          the-grand-budapest-hotel    8.461871          5088\n",
       "110594                         inception    8.187611          5069\n",
       "223759                   the-dark-knight    8.549644          5056\n",
       "124644                        la-la-land    8.185361          5055\n",
       "92733                          gone-girl    8.357028          4994\n",
       "178578                      pulp-fiction    8.722701          4991\n",
       "278511                     whiplash-2014    8.755524          4978\n",
       "146456                         midsommar    7.468957          4977\n",
       "94773            guardians-of-the-galaxy    7.478419          4958\n",
       "111087              inglourious-basterds    8.699797          4930"
      ]
     },
     "execution_count": 25,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "#20 most rated movies by rating count\n",
    "top_20_reviewed = movie_ratings_summary.sort_values(by='rating_count', ascending=False).head(20)\n",
    "\n",
    "top_20_reviewed"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "e39ada81",
   "metadata": {},
   "source": [
    "Interesting! Parasite is the most reviewed movie within our dataset and also appears to be our highest rated movie within the top 20. Lets look at the top 20 most rated movies ranked by rating on a plot:"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 48,
   "id": "4fe61bc4",
   "metadata": {
    "scrolled": false
   },
   "outputs": [
    {
     "data": {
      "image/png": "",
      "text/plain": [
       "<Figure size 1000x800 with 1 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "# Sorting top 20 most reviewed movies by average rating\n",
    "top_20_reviewed = top_20_reviewed.sort_values(by='avg_rating', ascending=True) \n",
    "\n",
    "# Creating a horizontal bar plot for average ratings with sorted values\n",
    "plt.figure(figsize=(10, 8))\n",
    "plt.barh(top_20_reviewed['movie_id'], top_20_reviewed['avg_rating'], color='salmon')\n",
    "plt.xlabel('Average Rating')\n",
    "plt.title('Average Rating for Top 20 Most Reviewed Movies (Sorted by Avg. Rating)')\n",
    "plt.show()"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "caef1705",
   "metadata": {},
   "source": [
    "Out of the most reviews movies, the highest average rated are Parasite, The Shining, and Whiplash."
   ]
  },
  {
   "cell_type": "markdown",
   "id": "f24b08cf",
   "metadata": {},
   "source": [
    "Lets look at some basic statistical analysis of our data to see what its like. We will use this to help us decide a threshold for minimum movie reviews and scores going forward."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 49,
   "id": "7b143243",
   "metadata": {
    "scrolled": true
   },
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>avg_rating</th>\n",
       "      <th>rating_count</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>count</th>\n",
       "      <td>286070.000000</td>\n",
       "      <td>286070.000000</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>mean</th>\n",
       "      <td>5.643809</td>\n",
       "      <td>38.725350</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>std</th>\n",
       "      <td>1.671065</td>\n",
       "      <td>215.272529</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>min</th>\n",
       "      <td>1.000000</td>\n",
       "      <td>1.000000</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>25%</th>\n",
       "      <td>4.750000</td>\n",
       "      <td>1.000000</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>50%</th>\n",
       "      <td>6.000000</td>\n",
       "      <td>3.000000</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>75%</th>\n",
       "      <td>6.894737</td>\n",
       "      <td>9.000000</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>max</th>\n",
       "      <td>10.000000</td>\n",
       "      <td>5998.000000</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "          avg_rating   rating_count\n",
       "count  286070.000000  286070.000000\n",
       "mean        5.643809      38.725350\n",
       "std         1.671065     215.272529\n",
       "min         1.000000       1.000000\n",
       "25%         4.750000       1.000000\n",
       "50%         6.000000       3.000000\n",
       "75%         6.894737       9.000000\n",
       "max        10.000000    5998.000000"
      ]
     },
     "execution_count": 49,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "movie_ratings_summary.describe()"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "7d138eba",
   "metadata": {},
   "source": [
    "#### Movie Rating Summary Insights\n",
    "* We have 286,070 movies within this dataframe\n",
    "* We can see that our dataset has an average rating of 5.64, we will strive for our reccomender to offer movies that would yield a higher rating than this\n",
    "* We will determine a minimum rating_count and avg_rating to apply to our data so we can reduce this number drastically, and only work with more relevant movies\n",
    "* We can see our rating_count data is quite skewed left with a mean of 38.7 buta 75th percintile of 9\n",
    "    * The count of ratings per movie has a large standard deviation, indicating a wide variation in the number of ratings received by each movie. Some movies have significantly more ratings compared to others.\n",
    "* The ratings seem to be somewhat positively skewed, with a higher mean and median than the lower quartile.\n"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "0c5ff852",
   "metadata": {},
   "source": [
    "Lets look at the distribution of ratings per movie:"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 50,
   "id": "624cfbc2",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "image/png": "",
      "text/plain": [
       "<Figure size 1000x600 with 1 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "# Plotting a histogram for the distribution of ratings per movie\n",
    "plt.figure(figsize=(10, 6))\n",
    "plt.hist(movie_ratings_summary['rating_count'], bins=100, color='skyblue', edgecolor='black')\n",
    "plt.xlabel('Number of Ratings per Movie')\n",
    "plt.ylabel('Frequency')\n",
    "plt.title('Distribution of Ratings per Movie')\n",
    "plt.grid(axis='y', alpha=0.5)\n",
    "plt.show()"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "b241fb98",
   "metadata": {},
   "source": [
    "We have very skewed data here the majority of our movies have less than about 300 reviews. Remember our movies had a mean rating count of 38, but a 75th percentile of just **9 reviews** Lets check how many movies we have with more than 500 ratings:"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 26,
   "id": "8d810558",
   "metadata": {
    "scrolled": true
   },
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>movie_id</th>\n",
       "      <th>avg_rating</th>\n",
       "      <th>rating_count</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>144</th>\n",
       "      <td>10-cloverfield-lane</td>\n",
       "      <td>7.385838</td>\n",
       "      <td>3587</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>189</th>\n",
       "      <td>10-things-i-hate-about-you</td>\n",
       "      <td>7.443325</td>\n",
       "      <td>2779</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>322</th>\n",
       "      <td>10000-bc</td>\n",
       "      <td>3.038869</td>\n",
       "      <td>566</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>355</th>\n",
       "      <td>101-dalmatians</td>\n",
       "      <td>4.893564</td>\n",
       "      <td>1212</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>459</th>\n",
       "      <td>12-angry-men</td>\n",
       "      <td>9.188402</td>\n",
       "      <td>3604</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>...</th>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>285789</th>\n",
       "      <td>zombieland-double-tap</td>\n",
       "      <td>5.837910</td>\n",
       "      <td>2258</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>285897</th>\n",
       "      <td>zookeeper</td>\n",
       "      <td>3.056662</td>\n",
       "      <td>653</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>285900</th>\n",
       "      <td>zoolander</td>\n",
       "      <td>6.315075</td>\n",
       "      <td>2136</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>285901</th>\n",
       "      <td>zoolander-2</td>\n",
       "      <td>3.523902</td>\n",
       "      <td>1025</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>285928</th>\n",
       "      <td>zootopia</td>\n",
       "      <td>7.286927</td>\n",
       "      <td>3886</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "<p>4900 rows × 3 columns</p>\n",
       "</div>"
      ],
      "text/plain": [
       "                          movie_id  avg_rating  rating_count\n",
       "144            10-cloverfield-lane    7.385838          3587\n",
       "189     10-things-i-hate-about-you    7.443325          2779\n",
       "322                       10000-bc    3.038869           566\n",
       "355                 101-dalmatians    4.893564          1212\n",
       "459                   12-angry-men    9.188402          3604\n",
       "...                            ...         ...           ...\n",
       "285789       zombieland-double-tap    5.837910          2258\n",
       "285897                   zookeeper    3.056662           653\n",
       "285900                   zoolander    6.315075          2136\n",
       "285901                 zoolander-2    3.523902          1025\n",
       "285928                    zootopia    7.286927          3886\n",
       "\n",
       "[4900 rows x 3 columns]"
      ]
     },
     "execution_count": 26,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "#movies with 500 or more ratings\n",
    "movie_ratings_summary.loc[movie_ratings_summary['rating_count'] >= 500]"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 28,
   "id": "82206ef2",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "4900"
      ]
     },
     "execution_count": 28,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "movie_ratings_summary.loc[movie_ratings_summary['rating_count'] >= 500].shape[0]"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 27,
   "id": "fe71e963",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "0.017128674799874156"
      ]
     },
     "execution_count": 27,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "#what percentage of movies meet this threshold?\n",
    "movie_ratings_summary.loc[movie_ratings_summary['rating_count'] >= 500].shape[0] / movie_ratings_summary.shape[0] "
   ]
  },
  {
   "cell_type": "markdown",
   "id": "8dc3f2d2",
   "metadata": {},
   "source": [
    "If we set 500 as our ratings threshold we would have 4900 movies remaining in our data set. Which is 1.7% of our original 286,000 movies. \n",
    "\n",
    "Lets check about setting our threshold a little bit lower."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 53,
   "id": "bcf3f0b4",
   "metadata": {
    "scrolled": false
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "With a threshold of at least 200 ratings, we have 9890 movies. 3.4571957912399065% of our original movies.\n",
      "With a threshold of at least 300 ratings, we have 7367 movies. 2.5752438214423043% of our original movies.\n",
      "With a threshold of at least 400 ratings, we have 5891 movies. 2.0592861886950744% of our original movies.\n",
      "With a threshold of at least 500 ratings, we have 4900 movies. 1.7128674799874157% of our original movies.\n",
      "With a threshold of at least 600 ratings, we have 4184 movies. 1.4625790890341523% of our original movies.\n",
      "With a threshold of at least 800 ratings, we have 3158 movies. 1.1039256126122978% of our original movies.\n"
     ]
    }
   ],
   "source": [
    "rating_threshold= [200, 300, 400, 500, 600, 800]\n",
    "\n",
    "for i in rating_threshold:\n",
    "    movies = movie_ratings_summary.loc[movie_ratings_summary['rating_count'] >= i].shape[0]\n",
    "    ratio_movies_used = 100 * (movie_ratings_summary.loc[movie_ratings_summary['rating_count'] >= i].shape[0] / movie_ratings_summary.shape[0])\n",
    "    print(f\"With a threshold of at least {i} ratings, we have {movies} movies. {ratio_movies_used}% of our original movies.\")"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "c830013d",
   "metadata": {},
   "source": [
    "Lets choose to use a dataset with movies with a minimum of 400 ratings. Know from our extreme right skewed rating per movie distribution that the majority of our reviews will be within the top movies.\n",
    "\n",
    "At this threshold we will have 5861 movies within out data set and that only the top ~2% of movies will be considered.\n",
    "\n",
    "**Assumptions:** Most people will enver watch 5800 movies, so this is plenty. Using less movies should instantly improve the quality of our reccomender if good movies tend to get more reviews...  "
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 29,
   "id": "932c1163",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>movie_id</th>\n",
       "      <th>avg_rating</th>\n",
       "      <th>rating_count</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>144</th>\n",
       "      <td>10-cloverfield-lane</td>\n",
       "      <td>7.385838</td>\n",
       "      <td>3587</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>189</th>\n",
       "      <td>10-things-i-hate-about-you</td>\n",
       "      <td>7.443325</td>\n",
       "      <td>2779</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>322</th>\n",
       "      <td>10000-bc</td>\n",
       "      <td>3.038869</td>\n",
       "      <td>566</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>355</th>\n",
       "      <td>101-dalmatians</td>\n",
       "      <td>4.893564</td>\n",
       "      <td>1212</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>367</th>\n",
       "      <td>102-dalmatians</td>\n",
       "      <td>3.820128</td>\n",
       "      <td>467</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>...</th>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>285789</th>\n",
       "      <td>zombieland-double-tap</td>\n",
       "      <td>5.837910</td>\n",
       "      <td>2258</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>285897</th>\n",
       "      <td>zookeeper</td>\n",
       "      <td>3.056662</td>\n",
       "      <td>653</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>285900</th>\n",
       "      <td>zoolander</td>\n",
       "      <td>6.315075</td>\n",
       "      <td>2136</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>285901</th>\n",
       "      <td>zoolander-2</td>\n",
       "      <td>3.523902</td>\n",
       "      <td>1025</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>285928</th>\n",
       "      <td>zootopia</td>\n",
       "      <td>7.286927</td>\n",
       "      <td>3886</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "<p>5891 rows × 3 columns</p>\n",
       "</div>"
      ],
      "text/plain": [
       "                          movie_id  avg_rating  rating_count\n",
       "144            10-cloverfield-lane    7.385838          3587\n",
       "189     10-things-i-hate-about-you    7.443325          2779\n",
       "322                       10000-bc    3.038869           566\n",
       "355                 101-dalmatians    4.893564          1212\n",
       "367                 102-dalmatians    3.820128           467\n",
       "...                            ...         ...           ...\n",
       "285789       zombieland-double-tap    5.837910          2258\n",
       "285897                   zookeeper    3.056662           653\n",
       "285900                   zoolander    6.315075          2136\n",
       "285901                 zoolander-2    3.523902          1025\n",
       "285928                    zootopia    7.286927          3886\n",
       "\n",
       "[5891 rows x 3 columns]"
      ]
     },
     "execution_count": 29,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "#movies with 400 or more ratings\n",
    "ratings_movie_min400 = movie_ratings_summary.loc[movie_ratings_summary['rating_count'] >= 400]\n",
    "\n",
    "ratings_movie_min400"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "f4d3c257",
   "metadata": {},
   "source": [
    "Lets see our distribution of rating scores now:"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "3efb9863",
   "metadata": {},
   "source": [
    "First we will do so for ratings before we set our minimum rating threshold, and then we will do it after."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 30,
   "id": "569e9c08",
   "metadata": {
    "scrolled": true
   },
   "outputs": [
    {
     "data": {
      "image/png": "",
      "text/plain": [
       "<Figure size 1000x600 with 1 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "# Plotting a histogram for the distribution of ratings per movie from original df\n",
    "plt.figure(figsize=(10, 6))\n",
    "plt.hist(movie_ratings_summary['avg_rating'], bins=10, color='skyblue', edgecolor='black')\n",
    "plt.xlabel('Average Ratings per Movie')\n",
    "plt.ylabel('Frequency')\n",
    "plt.title('Distribution of Movie Average Rating')\n",
    "plt.grid(axis='y', alpha=0.5)\n",
    "\n",
    "# Calculating mean and median of average ratings\n",
    "mean_rating = np.mean(movie_ratings_summary['avg_rating'])\n",
    "median_rating = np.median(movie_ratings_summary['avg_rating'])\n",
    "\n",
    "# Adding mean and median lines to the plot\n",
    "plt.axvline(mean_rating, color='orange', linestyle='dashed', linewidth=1, label=f'Mean: {mean_rating:.2f}')\n",
    "plt.axvline(median_rating, color='black', linestyle='dashed', linewidth=1, label=f'Median: {median_rating:.2f}')\n",
    "plt.legend()\n",
    "\n",
    "plt.show()"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "15eea4b0",
   "metadata": {},
   "source": [
    "For our ratings summary dataframe before thefreshold we have a pretty normal distribution with a mean rating of 5.64 and a median of 6.0. \n",
    "\n",
    "**Note:** That the mean and average here are calculated from movies average rating and do no take into account the total number of ratings."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 31,
   "id": "91014986",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "image/png": "",
      "text/plain": [
       "<Figure size 1000x600 with 1 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "# Plotting a histogram for the distribution of ratings per movie\n",
    "plt.figure(figsize=(10, 6))\n",
    "plt.hist(ratings_movie_min400['avg_rating'], bins=10, color='skyblue', edgecolor='black')\n",
    "plt.xlabel('Average Ratings per Movie')\n",
    "plt.ylabel('Frequency')\n",
    "plt.title('Distribution of Movie Average Rating (Rating Count of at least 400)')\n",
    "plt.grid(axis='y', alpha=0.5)\n",
    "\n",
    "# Calculating mean and median of average ratings\n",
    "mean_rating_400 = np.mean(ratings_movie_min400['avg_rating'])\n",
    "median_rating_400 = np.median(ratings_movie_min400['avg_rating'])\n",
    "\n",
    "# Adding mean and median lines to the plot\n",
    "plt.axvline(mean_rating, color='orange', linestyle='dashed', linewidth=1, label=f'Mean: {mean_rating_400:.2f}')\n",
    "plt.axvline(median_rating, color='black', linestyle='dashed', linewidth=1, label=f'Median: {median_rating_400:.2f}')\n",
    "plt.legend()\n",
    "\n",
    "plt.show()"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "d28738e0",
   "metadata": {},
   "source": [
    "Our movies with at least 400 ratings are have a little bit more of a left skew for average movie rating, and a higher mean rating overall:\n",
    "* Mean of 6.49\n",
    "* Median of 6.72\n",
    "Both of these numbers are higher than our original ratings summary table.\n",
    "\n",
    "The average number is lower than I expected, lets see how many movies above a rating of 7.5 we have."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 60,
   "id": "7488e8e6",
   "metadata": {
    "scrolled": true
   },
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>movie_id</th>\n",
       "      <th>avg_rating</th>\n",
       "      <th>rating_count</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>459</th>\n",
       "      <td>12-angry-men</td>\n",
       "      <td>9.188402</td>\n",
       "      <td>3604</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>518</th>\n",
       "      <td>12-years-a-slave</td>\n",
       "      <td>8.245345</td>\n",
       "      <td>3061</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>550</th>\n",
       "      <td>13-assassins</td>\n",
       "      <td>7.572660</td>\n",
       "      <td>812</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>635</th>\n",
       "      <td>13th</td>\n",
       "      <td>8.074008</td>\n",
       "      <td>1689</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>860</th>\n",
       "      <td>1917</td>\n",
       "      <td>7.647086</td>\n",
       "      <td>4375</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>...</th>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>284393</th>\n",
       "      <td>young-frankenstein</td>\n",
       "      <td>7.911987</td>\n",
       "      <td>1852</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>284463</th>\n",
       "      <td>young-mr-lincoln</td>\n",
       "      <td>7.675381</td>\n",
       "      <td>459</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>284652</th>\n",
       "      <td>your-name</td>\n",
       "      <td>8.001152</td>\n",
       "      <td>2605</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>285038</th>\n",
       "      <td>z</td>\n",
       "      <td>8.278846</td>\n",
       "      <td>624</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>285613</th>\n",
       "      <td>zodiac</td>\n",
       "      <td>8.406332</td>\n",
       "      <td>4580</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "<p>1416 rows × 3 columns</p>\n",
       "</div>"
      ],
      "text/plain": [
       "                  movie_id  avg_rating  rating_count\n",
       "459           12-angry-men    9.188402          3604\n",
       "518       12-years-a-slave    8.245345          3061\n",
       "550           13-assassins    7.572660           812\n",
       "635                   13th    8.074008          1689\n",
       "860                   1917    7.647086          4375\n",
       "...                    ...         ...           ...\n",
       "284393  young-frankenstein    7.911987          1852\n",
       "284463    young-mr-lincoln    7.675381           459\n",
       "284652           your-name    8.001152          2605\n",
       "285038                   z    8.278846           624\n",
       "285613              zodiac    8.406332          4580\n",
       "\n",
       "[1416 rows x 3 columns]"
      ]
     },
     "execution_count": 60,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "#Number of movies with a rating greater than 7.5\n",
    "ratings_movie_min400.loc[ratings_movie_min400['avg_rating'] >= 7.5]"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "72230893",
   "metadata": {},
   "source": [
    "Only 1416 movies (of approx. 5800) have an average score of greater than 7.5."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 62,
   "id": "58ceeafb",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>movie_id</th>\n",
       "      <th>avg_rating</th>\n",
       "      <th>rating_count</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>459</th>\n",
       "      <td>12-angry-men</td>\n",
       "      <td>9.188402</td>\n",
       "      <td>3604</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>518</th>\n",
       "      <td>12-years-a-slave</td>\n",
       "      <td>8.245345</td>\n",
       "      <td>3061</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>635</th>\n",
       "      <td>13th</td>\n",
       "      <td>8.074008</td>\n",
       "      <td>1689</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1162</th>\n",
       "      <td>2001-a-space-odyssey</td>\n",
       "      <td>8.931693</td>\n",
       "      <td>4187</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1322</th>\n",
       "      <td>20th-century-women</td>\n",
       "      <td>8.019155</td>\n",
       "      <td>2297</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>...</th>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>283717</th>\n",
       "      <td>yi-yi</td>\n",
       "      <td>8.828756</td>\n",
       "      <td>1238</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>283857</th>\n",
       "      <td>yojimbo</td>\n",
       "      <td>8.367674</td>\n",
       "      <td>1621</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>284652</th>\n",
       "      <td>your-name</td>\n",
       "      <td>8.001152</td>\n",
       "      <td>2605</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>285038</th>\n",
       "      <td>z</td>\n",
       "      <td>8.278846</td>\n",
       "      <td>624</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>285613</th>\n",
       "      <td>zodiac</td>\n",
       "      <td>8.406332</td>\n",
       "      <td>4580</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "<p>591 rows × 3 columns</p>\n",
       "</div>"
      ],
      "text/plain": [
       "                    movie_id  avg_rating  rating_count\n",
       "459             12-angry-men    9.188402          3604\n",
       "518         12-years-a-slave    8.245345          3061\n",
       "635                     13th    8.074008          1689\n",
       "1162    2001-a-space-odyssey    8.931693          4187\n",
       "1322      20th-century-women    8.019155          2297\n",
       "...                      ...         ...           ...\n",
       "283717                 yi-yi    8.828756          1238\n",
       "283857               yojimbo    8.367674          1621\n",
       "284652             your-name    8.001152          2605\n",
       "285038                     z    8.278846           624\n",
       "285613                zodiac    8.406332          4580\n",
       "\n",
       "[591 rows x 3 columns]"
      ]
     },
     "execution_count": 62,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "#Number of movies with a rating greater than 8\n",
    "ratings_movie_min400.loc[ratings_movie_min400['avg_rating'] >= 8]"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "9bca2f48",
   "metadata": {},
   "source": [
    "Only a measely 591 movies have a rating greater than 8! Tough crowd..."
   ]
  },
  {
   "cell_type": "markdown",
   "id": "fb9bdd5b",
   "metadata": {},
   "source": [
    "## Users Data\n",
    "We wont be using this data for our content based reccomendations but we may need this later, lets take a look.\n",
    "\n",
    "We have the data of **8139 users** which should be sufficient in us noticing trends in users preferances and allow us to make legimate suggestions. "
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 63,
   "id": "b2bcfa14",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "(8139, 5)"
      ]
     },
     "execution_count": 63,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "users.shape"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 64,
   "id": "d512dcbd",
   "metadata": {
    "scrolled": true
   },
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>_id</th>\n",
       "      <th>display_name</th>\n",
       "      <th>num_ratings_pages</th>\n",
       "      <th>num_reviews</th>\n",
       "      <th>username</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>5fc4172ec6cd28ebd99dd0e2</td>\n",
       "      <td>Lucy</td>\n",
       "      <td>32.0</td>\n",
       "      <td>1650</td>\n",
       "      <td>deathproof</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>5fc4172ec6cd28ebd99dd0ea</td>\n",
       "      <td>Matt Singer</td>\n",
       "      <td>52.0</td>\n",
       "      <td>1915</td>\n",
       "      <td>superpulse</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>5fc4172ec6cd28ebd99dd0ed</td>\n",
       "      <td>Sean Baker</td>\n",
       "      <td>21.0</td>\n",
       "      <td>1283</td>\n",
       "      <td>lilfilm</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>5fc4172ec6cd28ebd99dd0ee</td>\n",
       "      <td>iana</td>\n",
       "      <td>37.0</td>\n",
       "      <td>1177</td>\n",
       "      <td>ianamurray</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>5fc419171ebf67b9fbe48615</td>\n",
       "      <td>Lizzy</td>\n",
       "      <td>57.0</td>\n",
       "      <td>1810</td>\n",
       "      <td>punchdrunklizzy</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "                        _id display_name  num_ratings_pages  num_reviews  \\\n",
       "0  5fc4172ec6cd28ebd99dd0e2         Lucy               32.0         1650   \n",
       "1  5fc4172ec6cd28ebd99dd0ea  Matt Singer               52.0         1915   \n",
       "2  5fc4172ec6cd28ebd99dd0ed   Sean Baker               21.0         1283   \n",
       "3  5fc4172ec6cd28ebd99dd0ee         iana               37.0         1177   \n",
       "4  5fc419171ebf67b9fbe48615        Lizzy               57.0         1810   \n",
       "\n",
       "          username  \n",
       "0       deathproof  \n",
       "1       superpulse  \n",
       "2          lilfilm  \n",
       "3       ianamurray  \n",
       "4  punchdrunklizzy  "
      ]
     },
     "execution_count": 64,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "users.head()"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "1ba1ef4b",
   "metadata": {},
   "source": [
    "**Update:** The user data was not used for this project."
   ]
  },
  {
   "cell_type": "markdown",
   "id": "9edc7a06",
   "metadata": {},
   "source": [
    "## Creating Dataframe for Pre-Processing\n",
    "Now that we have gone through our three datasets Movies, Ratings, and Users. We are going to merge our engineered dataframe ratings_movie_min500 onto our movies data using user_id."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 32,
   "id": "7a4b4e77",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "(157360, 11)"
      ]
     },
     "execution_count": 32,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "#Lets see how many rows and columns we have before we merge\n",
    "movies_clean.shape"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 66,
   "id": "1773489c",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>_id</th>\n",
       "      <th>genres</th>\n",
       "      <th>movie_id</th>\n",
       "      <th>original_language</th>\n",
       "      <th>overview</th>\n",
       "      <th>popularity</th>\n",
       "      <th>release_date</th>\n",
       "      <th>runtime</th>\n",
       "      <th>vote_average</th>\n",
       "      <th>vote_count</th>\n",
       "      <th>year_released</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>5fc85f606758f69634496fd3</td>\n",
       "      <td>[\"Music\",\"Animation\"]</td>\n",
       "      <td>football-freaks</td>\n",
       "      <td>en</td>\n",
       "      <td>Football crazy, football mad. Don’t watch this...</td>\n",
       "      <td>0.600</td>\n",
       "      <td>1971-12-05</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>1971.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>5fc85ff26758f696344ace0c</td>\n",
       "      <td>[]</td>\n",
       "      <td>aftermath-1960</td>\n",
       "      <td>en</td>\n",
       "      <td>Aftermath was the pilot for an unsold TV serie...</td>\n",
       "      <td>0.600</td>\n",
       "      <td>1960-04-17</td>\n",
       "      <td>22.0</td>\n",
       "      <td>8.0</td>\n",
       "      <td>1.0</td>\n",
       "      <td>1960.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>5fc85f606758f69634496fd1</td>\n",
       "      <td>[\"Drama\"]</td>\n",
       "      <td>the-musicians-daughter</td>\n",
       "      <td>en</td>\n",
       "      <td>Carl Wagner's good wife was dying. His heart b...</td>\n",
       "      <td>0.600</td>\n",
       "      <td>1911-12-12</td>\n",
       "      <td>15.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>1911.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>5fc85f606758f69634496fd4</td>\n",
       "      <td>[\"Documentary\"]</td>\n",
       "      <td>50-years-of-fabulous</td>\n",
       "      <td>en</td>\n",
       "      <td>50 Years of Fabulous recounts the rich history...</td>\n",
       "      <td>0.600</td>\n",
       "      <td>2018-05-17</td>\n",
       "      <td>75.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>2018.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>5</th>\n",
       "      <td>5fc85ff26758f696344ace3a</td>\n",
       "      <td>[\"Romance\"]</td>\n",
       "      <td>where-love-has-gone</td>\n",
       "      <td>en</td>\n",
       "      <td>A divorced couple's teen-age daughter stands t...</td>\n",
       "      <td>2.304</td>\n",
       "      <td>1964-11-02</td>\n",
       "      <td>111.0</td>\n",
       "      <td>6.1</td>\n",
       "      <td>11.0</td>\n",
       "      <td>1964.0</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "                        _id                 genres                movie_id  \\\n",
       "0  5fc85f606758f69634496fd3  [\"Music\",\"Animation\"]         football-freaks   \n",
       "1  5fc85ff26758f696344ace0c                     []          aftermath-1960   \n",
       "3  5fc85f606758f69634496fd1              [\"Drama\"]  the-musicians-daughter   \n",
       "4  5fc85f606758f69634496fd4        [\"Documentary\"]    50-years-of-fabulous   \n",
       "5  5fc85ff26758f696344ace3a            [\"Romance\"]     where-love-has-gone   \n",
       "\n",
       "  original_language                                           overview  \\\n",
       "0                en  Football crazy, football mad. Don’t watch this...   \n",
       "1                en  Aftermath was the pilot for an unsold TV serie...   \n",
       "3                en  Carl Wagner's good wife was dying. His heart b...   \n",
       "4                en  50 Years of Fabulous recounts the rich history...   \n",
       "5                en  A divorced couple's teen-age daughter stands t...   \n",
       "\n",
       "   popularity release_date  runtime  vote_average  vote_count  year_released  \n",
       "0       0.600   1971-12-05      0.0           0.0         0.0         1971.0  \n",
       "1       0.600   1960-04-17     22.0           8.0         1.0         1960.0  \n",
       "3       0.600   1911-12-12     15.0           0.0         0.0         1911.0  \n",
       "4       0.600   2018-05-17     75.0           0.0         0.0         2018.0  \n",
       "5       2.304   1964-11-02    111.0           6.1        11.0         1964.0  "
      ]
     },
     "execution_count": 66,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "movies_clean.head()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 67,
   "id": "1b51d00e",
   "metadata": {
    "scrolled": true
   },
   "outputs": [
    {
     "data": {
      "text/plain": [
       "(5891, 3)"
      ]
     },
     "execution_count": 67,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "ratings_movie_min400.shape"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 68,
   "id": "21d80e79",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>movie_id</th>\n",
       "      <th>avg_rating</th>\n",
       "      <th>rating_count</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>16124</th>\n",
       "      <td>american-ultra</td>\n",
       "      <td>5.590164</td>\n",
       "      <td>1281</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>144832</th>\n",
       "      <td>men-women-children</td>\n",
       "      <td>4.617264</td>\n",
       "      <td>614</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>203062</th>\n",
       "      <td>sophies-choice</td>\n",
       "      <td>6.635359</td>\n",
       "      <td>543</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>43283</th>\n",
       "      <td>certified-copy</td>\n",
       "      <td>8.278066</td>\n",
       "      <td>1158</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>112540</th>\n",
       "      <td>ip-man</td>\n",
       "      <td>7.295716</td>\n",
       "      <td>957</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>103656</th>\n",
       "      <td>horse-girl-2020</td>\n",
       "      <td>5.481743</td>\n",
       "      <td>849</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>263538</th>\n",
       "      <td>toy-story-of-terror</td>\n",
       "      <td>6.902111</td>\n",
       "      <td>521</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>75419</th>\n",
       "      <td>everything-everything</td>\n",
       "      <td>4.729730</td>\n",
       "      <td>481</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>90081</th>\n",
       "      <td>get-on-up</td>\n",
       "      <td>6.206278</td>\n",
       "      <td>446</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>161412</th>\n",
       "      <td>nymphomaniac-volume-i</td>\n",
       "      <td>6.776185</td>\n",
       "      <td>1604</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>76883</th>\n",
       "      <td>fahrenheit-451</td>\n",
       "      <td>6.675615</td>\n",
       "      <td>447</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>218153</th>\n",
       "      <td>the-benchwarmers</td>\n",
       "      <td>3.895801</td>\n",
       "      <td>643</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>13558</th>\n",
       "      <td>alice-in-wonderland-1951</td>\n",
       "      <td>7.206070</td>\n",
       "      <td>1878</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>186204</th>\n",
       "      <td>robin-hood</td>\n",
       "      <td>6.976959</td>\n",
       "      <td>1519</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>205469</th>\n",
       "      <td>stake-land</td>\n",
       "      <td>6.348449</td>\n",
       "      <td>419</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>92818</th>\n",
       "      <td>good-boys-2019</td>\n",
       "      <td>6.087944</td>\n",
       "      <td>1717</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>219225</th>\n",
       "      <td>the-blood-on-satans-claw</td>\n",
       "      <td>6.874429</td>\n",
       "      <td>438</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>189085</th>\n",
       "      <td>sabotage</td>\n",
       "      <td>6.877034</td>\n",
       "      <td>553</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>253059</th>\n",
       "      <td>the-towering-inferno</td>\n",
       "      <td>6.646825</td>\n",
       "      <td>504</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>192252</th>\n",
       "      <td>scooby-doo-2-monsters-unleashed</td>\n",
       "      <td>5.307324</td>\n",
       "      <td>1461</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "                               movie_id  avg_rating  rating_count\n",
       "16124                    american-ultra    5.590164          1281\n",
       "144832               men-women-children    4.617264           614\n",
       "203062                   sophies-choice    6.635359           543\n",
       "43283                    certified-copy    8.278066          1158\n",
       "112540                           ip-man    7.295716           957\n",
       "103656                  horse-girl-2020    5.481743           849\n",
       "263538              toy-story-of-terror    6.902111           521\n",
       "75419             everything-everything    4.729730           481\n",
       "90081                         get-on-up    6.206278           446\n",
       "161412            nymphomaniac-volume-i    6.776185          1604\n",
       "76883                    fahrenheit-451    6.675615           447\n",
       "218153                 the-benchwarmers    3.895801           643\n",
       "13558          alice-in-wonderland-1951    7.206070          1878\n",
       "186204                       robin-hood    6.976959          1519\n",
       "205469                       stake-land    6.348449           419\n",
       "92818                    good-boys-2019    6.087944          1717\n",
       "219225         the-blood-on-satans-claw    6.874429           438\n",
       "189085                         sabotage    6.877034           553\n",
       "253059             the-towering-inferno    6.646825           504\n",
       "192252  scooby-doo-2-monsters-unleashed    5.307324          1461"
      ]
     },
     "execution_count": 68,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "ratings_movie_min400.sample(20)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 33,
   "id": "0b0763c7",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>movie_id</th>\n",
       "      <th>avg_rating</th>\n",
       "      <th>rating_count</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>144</th>\n",
       "      <td>10-cloverfield-lane</td>\n",
       "      <td>7.385838</td>\n",
       "      <td>3587</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>189</th>\n",
       "      <td>10-things-i-hate-about-you</td>\n",
       "      <td>7.443325</td>\n",
       "      <td>2779</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>322</th>\n",
       "      <td>10000-bc</td>\n",
       "      <td>3.038869</td>\n",
       "      <td>566</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>355</th>\n",
       "      <td>101-dalmatians</td>\n",
       "      <td>4.893564</td>\n",
       "      <td>1212</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>367</th>\n",
       "      <td>102-dalmatians</td>\n",
       "      <td>3.820128</td>\n",
       "      <td>467</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "                       movie_id  avg_rating  rating_count\n",
       "144         10-cloverfield-lane    7.385838          3587\n",
       "189  10-things-i-hate-about-you    7.443325          2779\n",
       "322                    10000-bc    3.038869           566\n",
       "355              101-dalmatians    4.893564          1212\n",
       "367              102-dalmatians    3.820128           467"
      ]
     },
     "execution_count": 33,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "ratings_movie_min400.head()"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "1c9f2b99",
   "metadata": {},
   "source": [
    "We have 157,360 rows and 11 features for our movies dataset. We have 5891 rows and 3 features in our adjusted ratings dataset. We will expect to have 13 features and however many rows match with movie_id. It should be close to 5891 We will proceed to drop all movies that dont match afterwards.\n",
    "\n",
    "**Note:** We dropped movies from our movie dataframe that did not have a overview. We will likely lose some rows there.\n",
    "\n",
    "**UPDATE:** We now also dropped movies that did not have original_language equal to en. This was a substantial drop in our data so we can assume we will lose a good chunk of rows from that."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 34,
   "id": "ab05401c",
   "metadata": {},
   "outputs": [],
   "source": [
    "#Inner-Join the movies and the customer ratings table on table_id\n",
    "df = pd.merge(movies_clean, ratings_movie_min400, on='movie_id', how = 'inner')"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 35,
   "id": "bf3daa5e",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>_id</th>\n",
       "      <th>genres</th>\n",
       "      <th>movie_id</th>\n",
       "      <th>original_language</th>\n",
       "      <th>overview</th>\n",
       "      <th>popularity</th>\n",
       "      <th>release_date</th>\n",
       "      <th>runtime</th>\n",
       "      <th>vote_average</th>\n",
       "      <th>vote_count</th>\n",
       "      <th>year_released</th>\n",
       "      <th>avg_rating</th>\n",
       "      <th>rating_count</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>5fc85ff26758f696344ad07f</td>\n",
       "      <td>[\"Horror\",\"Thriller\"]</td>\n",
       "      <td>house-at-the-end-of-the-street</td>\n",
       "      <td>en</td>\n",
       "      <td>A mother and daughter move to a new town and f...</td>\n",
       "      <td>11.088</td>\n",
       "      <td>2012-09-21</td>\n",
       "      <td>101.0</td>\n",
       "      <td>5.8</td>\n",
       "      <td>1471.0</td>\n",
       "      <td>2012.0</td>\n",
       "      <td>3.880987</td>\n",
       "      <td>689</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>5fc85ff26758f696344aceeb</td>\n",
       "      <td>[\"Crime\",\"Drama\"]</td>\n",
       "      <td>green-street-hooligans</td>\n",
       "      <td>en</td>\n",
       "      <td>After being wrongfully expelled from Harvard U...</td>\n",
       "      <td>14.690</td>\n",
       "      <td>2005-09-09</td>\n",
       "      <td>109.0</td>\n",
       "      <td>7.2</td>\n",
       "      <td>1794.0</td>\n",
       "      <td>2005.0</td>\n",
       "      <td>5.953771</td>\n",
       "      <td>411</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>5fc85ff26758f696344acf29</td>\n",
       "      <td>[\"Action\",\"Comedy\",\"Crime\"]</td>\n",
       "      <td>beverly-hills-cop-iii</td>\n",
       "      <td>en</td>\n",
       "      <td>Back in sunny southern California and on the t...</td>\n",
       "      <td>13.890</td>\n",
       "      <td>1994-05-24</td>\n",
       "      <td>105.0</td>\n",
       "      <td>5.9</td>\n",
       "      <td>1292.0</td>\n",
       "      <td>1994.0</td>\n",
       "      <td>4.492424</td>\n",
       "      <td>528</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>5fc85ff26758f696344ad019</td>\n",
       "      <td>[\"Adventure\",\"Action\",\"Comedy\",\"Thriller\",\"Cri...</td>\n",
       "      <td>bad-boys-ii</td>\n",
       "      <td>en</td>\n",
       "      <td>Out-of-control, trash-talking buddy cops Marcu...</td>\n",
       "      <td>32.121</td>\n",
       "      <td>2003-07-18</td>\n",
       "      <td>147.0</td>\n",
       "      <td>6.6</td>\n",
       "      <td>4225.0</td>\n",
       "      <td>2003.0</td>\n",
       "      <td>6.021593</td>\n",
       "      <td>1343</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>5fc85ff26758f696344ad100</td>\n",
       "      <td>[\"Romance\",\"Drama\"]</td>\n",
       "      <td>a-single-man</td>\n",
       "      <td>en</td>\n",
       "      <td>The life of George Falconer, a British college...</td>\n",
       "      <td>11.640</td>\n",
       "      <td>2009-10-19</td>\n",
       "      <td>97.0</td>\n",
       "      <td>7.3</td>\n",
       "      <td>1216.0</td>\n",
       "      <td>2009.0</td>\n",
       "      <td>7.660256</td>\n",
       "      <td>1404</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>...</th>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>5056</th>\n",
       "      <td>61b645960109cc2a5dcd8d76</td>\n",
       "      <td>[\"Action\",\"Adventure\",\"Thriller\"]</td>\n",
       "      <td>the-kings-man</td>\n",
       "      <td>en</td>\n",
       "      <td>As a collection of history's worst tyrants and...</td>\n",
       "      <td>56.179</td>\n",
       "      <td>2021-12-21</td>\n",
       "      <td>131.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>2021.0</td>\n",
       "      <td>5.307355</td>\n",
       "      <td>911</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>5057</th>\n",
       "      <td>61ccb7590109cc2a5d628e1d</td>\n",
       "      <td>[\"Drama\",\"Science Fiction\"]</td>\n",
       "      <td>ex-machina-2015</td>\n",
       "      <td>en</td>\n",
       "      <td>Caleb, a coder at the world's largest internet...</td>\n",
       "      <td>26.475</td>\n",
       "      <td>2015-01-21</td>\n",
       "      <td>108.0</td>\n",
       "      <td>7.6</td>\n",
       "      <td>10829.0</td>\n",
       "      <td>2015.0</td>\n",
       "      <td>7.990072</td>\n",
       "      <td>3324</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>5058</th>\n",
       "      <td>61d1aad90109cc2a5d83d806</td>\n",
       "      <td>[\"Documentary\"]</td>\n",
       "      <td>harry-potter-20th-anniversary-return-to-hogwarts</td>\n",
       "      <td>en</td>\n",
       "      <td>An enchanting making-of story told through all...</td>\n",
       "      <td>583.354</td>\n",
       "      <td>2022-01-01</td>\n",
       "      <td>103.0</td>\n",
       "      <td>8.3</td>\n",
       "      <td>840.0</td>\n",
       "      <td>2022.0</td>\n",
       "      <td>7.605364</td>\n",
       "      <td>522</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>5059</th>\n",
       "      <td>61dd43eb0109cc2a5d12ee62</td>\n",
       "      <td>[\"Comedy\",\"Horror\"]</td>\n",
       "      <td>house-1985</td>\n",
       "      <td>en</td>\n",
       "      <td>Roger Cobb is an author who has just separated...</td>\n",
       "      <td>12.058</td>\n",
       "      <td>1985-02-28</td>\n",
       "      <td>93.0</td>\n",
       "      <td>6.1</td>\n",
       "      <td>391.0</td>\n",
       "      <td>1985.0</td>\n",
       "      <td>6.154905</td>\n",
       "      <td>581</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>5060</th>\n",
       "      <td>61e320bc0109cc2a5d9e7875</td>\n",
       "      <td>[\"Horror\",\"Mystery\",\"Thriller\"]</td>\n",
       "      <td>scream-2022</td>\n",
       "      <td>en</td>\n",
       "      <td>Twenty-five years after a streak of brutal mur...</td>\n",
       "      <td>588.452</td>\n",
       "      <td>2022-01-12</td>\n",
       "      <td>114.0</td>\n",
       "      <td>7.3</td>\n",
       "      <td>342.0</td>\n",
       "      <td>2022.0</td>\n",
       "      <td>6.696850</td>\n",
       "      <td>1778</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "<p>5061 rows × 13 columns</p>\n",
       "</div>"
      ],
      "text/plain": [
       "                           _id  \\\n",
       "0     5fc85ff26758f696344ad07f   \n",
       "1     5fc85ff26758f696344aceeb   \n",
       "2     5fc85ff26758f696344acf29   \n",
       "3     5fc85ff26758f696344ad019   \n",
       "4     5fc85ff26758f696344ad100   \n",
       "...                        ...   \n",
       "5056  61b645960109cc2a5dcd8d76   \n",
       "5057  61ccb7590109cc2a5d628e1d   \n",
       "5058  61d1aad90109cc2a5d83d806   \n",
       "5059  61dd43eb0109cc2a5d12ee62   \n",
       "5060  61e320bc0109cc2a5d9e7875   \n",
       "\n",
       "                                                 genres  \\\n",
       "0                                 [\"Horror\",\"Thriller\"]   \n",
       "1                                     [\"Crime\",\"Drama\"]   \n",
       "2                           [\"Action\",\"Comedy\",\"Crime\"]   \n",
       "3     [\"Adventure\",\"Action\",\"Comedy\",\"Thriller\",\"Cri...   \n",
       "4                                   [\"Romance\",\"Drama\"]   \n",
       "...                                                 ...   \n",
       "5056                  [\"Action\",\"Adventure\",\"Thriller\"]   \n",
       "5057                        [\"Drama\",\"Science Fiction\"]   \n",
       "5058                                    [\"Documentary\"]   \n",
       "5059                                [\"Comedy\",\"Horror\"]   \n",
       "5060                    [\"Horror\",\"Mystery\",\"Thriller\"]   \n",
       "\n",
       "                                              movie_id original_language  \\\n",
       "0                       house-at-the-end-of-the-street                en   \n",
       "1                               green-street-hooligans                en   \n",
       "2                                beverly-hills-cop-iii                en   \n",
       "3                                          bad-boys-ii                en   \n",
       "4                                         a-single-man                en   \n",
       "...                                                ...               ...   \n",
       "5056                                     the-kings-man                en   \n",
       "5057                                   ex-machina-2015                en   \n",
       "5058  harry-potter-20th-anniversary-return-to-hogwarts                en   \n",
       "5059                                        house-1985                en   \n",
       "5060                                       scream-2022                en   \n",
       "\n",
       "                                               overview  popularity  \\\n",
       "0     A mother and daughter move to a new town and f...      11.088   \n",
       "1     After being wrongfully expelled from Harvard U...      14.690   \n",
       "2     Back in sunny southern California and on the t...      13.890   \n",
       "3     Out-of-control, trash-talking buddy cops Marcu...      32.121   \n",
       "4     The life of George Falconer, a British college...      11.640   \n",
       "...                                                 ...         ...   \n",
       "5056  As a collection of history's worst tyrants and...      56.179   \n",
       "5057  Caleb, a coder at the world's largest internet...      26.475   \n",
       "5058  An enchanting making-of story told through all...     583.354   \n",
       "5059  Roger Cobb is an author who has just separated...      12.058   \n",
       "5060  Twenty-five years after a streak of brutal mur...     588.452   \n",
       "\n",
       "     release_date  runtime  vote_average  vote_count  year_released  \\\n",
       "0      2012-09-21    101.0           5.8      1471.0         2012.0   \n",
       "1      2005-09-09    109.0           7.2      1794.0         2005.0   \n",
       "2      1994-05-24    105.0           5.9      1292.0         1994.0   \n",
       "3      2003-07-18    147.0           6.6      4225.0         2003.0   \n",
       "4      2009-10-19     97.0           7.3      1216.0         2009.0   \n",
       "...           ...      ...           ...         ...            ...   \n",
       "5056   2021-12-21    131.0           0.0         0.0         2021.0   \n",
       "5057   2015-01-21    108.0           7.6     10829.0         2015.0   \n",
       "5058   2022-01-01    103.0           8.3       840.0         2022.0   \n",
       "5059   1985-02-28     93.0           6.1       391.0         1985.0   \n",
       "5060   2022-01-12    114.0           7.3       342.0         2022.0   \n",
       "\n",
       "      avg_rating  rating_count  \n",
       "0       3.880987           689  \n",
       "1       5.953771           411  \n",
       "2       4.492424           528  \n",
       "3       6.021593          1343  \n",
       "4       7.660256          1404  \n",
       "...          ...           ...  \n",
       "5056    5.307355           911  \n",
       "5057    7.990072          3324  \n",
       "5058    7.605364           522  \n",
       "5059    6.154905           581  \n",
       "5060    6.696850          1778  \n",
       "\n",
       "[5061 rows x 13 columns]"
      ]
     },
     "execution_count": 35,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "df"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 37,
   "id": "1aa1a84a",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "(5061, 13)"
      ]
     },
     "execution_count": 37,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "df.shape"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "903d412a",
   "metadata": {},
   "source": [
    "We have 5,061 rows. This is a good chunk of our data but we seem to have lost a good amount of our movies. Lets see what percentage we matched."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 38,
   "id": "0e3662ba",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "0.8591071125445595"
      ]
     },
     "execution_count": 38,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "#Percent of rows from our ratings table successfully joined\n",
    "df.shape[0] / ratings_movie_min400.shape[0]"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "0a1e3a24",
   "metadata": {},
   "source": [
    "86%... This seems reasonable considering some of the nulls we dropped from the movies column as well as dropping all non english movies (which was almost 30% of our dataset!).\n",
    "\n"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "09dd08e4",
   "metadata": {},
   "source": [
    "We do have some potentially correlated data remaining:\n",
    "* vote_average, vote_count came as part of our movie dataset but actually use values from \"The Movie Database\" that were added on by the creator of our dataset.\t\n",
    "* avg_rating,rating_count are calcuated by us from within our data set. Lets check out a numerical correlation matrix"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 73,
   "id": "ffa40769",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "<class 'pandas.core.frame.DataFrame'>\n",
      "RangeIndex: 5061 entries, 0 to 5060\n",
      "Data columns (total 13 columns):\n",
      " #   Column             Non-Null Count  Dtype  \n",
      "---  ------             --------------  -----  \n",
      " 0   _id                5061 non-null   object \n",
      " 1   genres             5061 non-null   object \n",
      " 2   movie_id           5061 non-null   object \n",
      " 3   original_language  5061 non-null   object \n",
      " 4   overview           5061 non-null   object \n",
      " 5   popularity         5061 non-null   float64\n",
      " 6   release_date       5061 non-null   object \n",
      " 7   runtime            5061 non-null   float64\n",
      " 8   vote_average       5061 non-null   float64\n",
      " 9   vote_count         5061 non-null   float64\n",
      " 10  year_released      5061 non-null   float64\n",
      " 11  avg_rating         5061 non-null   float64\n",
      " 12  rating_count       5061 non-null   int64  \n",
      "dtypes: float64(6), int64(1), object(6)\n",
      "memory usage: 514.1+ KB\n"
     ]
    }
   ],
   "source": [
    "df.info()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 39,
   "id": "837b24ee",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "               popularity   runtime  vote_average  vote_count  year_released  \\\n",
      "popularity       1.000000  0.071147      0.049268    0.119357       0.116640   \n",
      "runtime          0.071147  1.000000      0.194611    0.313184       0.052898   \n",
      "vote_average     0.049268  0.194611      1.000000    0.268775      -0.236728   \n",
      "vote_count       0.119357  0.313184      0.268775    1.000000       0.191232   \n",
      "year_released    0.116640  0.052898     -0.236728    0.191232       1.000000   \n",
      "avg_rating      -0.059452  0.106506      0.635928    0.035752      -0.382299   \n",
      "rating_count     0.129166  0.265828      0.333107    0.759968       0.131370   \n",
      "\n",
      "               avg_rating  rating_count  \n",
      "popularity      -0.059452      0.129166  \n",
      "runtime          0.106506      0.265828  \n",
      "vote_average     0.635928      0.333107  \n",
      "vote_count       0.035752      0.759968  \n",
      "year_released   -0.382299      0.131370  \n",
      "avg_rating       1.000000      0.333280  \n",
      "rating_count     0.333280      1.000000  \n"
     ]
    }
   ],
   "source": [
    "# Select numeric columns for correlation calculation\n",
    "numeric_columns = df.select_dtypes(include=['float64', 'int64']).columns.tolist()\n",
    "\n",
    "# Calculate correlation matrix\n",
    "correlation_matrix = df[numeric_columns].corr()\n",
    "\n",
    "# Display the correlation matrix\n",
    "print(correlation_matrix)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 75,
   "id": "b9597704",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "image/png": "",
      "text/plain": [
       "<Figure size 1000x800 with 2 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "# Create a heatmap\n",
    "plt.figure(figsize=(10, 8))\n",
    "sns.heatmap(correlation_matrix, annot=True, cmap='coolwarm', fmt='.2f')\n",
    "plt.title('Correlation Heatmap')\n",
    "plt.show()"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "4e622f97",
   "metadata": {},
   "source": [
    "#### Correlation Insights\n",
    "We can see that they do infact have a high correlation.\n",
    "* Vote_Average (TMDB) and Avg_rating (Our data) have a 0.64 correlation\n",
    "* Vote_Count (TMDB) and Rating_Count have a 0.76 correlation\n",
    "* Our other features look relatively uncorrelated.\n",
    "\n",
    "We will go ahead and drop the Vote_Average and Vote_Count from our dataframe."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 40,
   "id": "29f2d8d1",
   "metadata": {},
   "outputs": [],
   "source": [
    "# Drop 'vote_average' and 'vote_count' columns\n",
    "df.drop(columns=['vote_average', 'vote_count'], inplace=True)"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "ccaf27bc",
   "metadata": {},
   "source": [
    "Lets also drop the release date, as it was not included in the correlation matrix but qualititavely we know it will be correlated with year_released."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 41,
   "id": "334ff98f",
   "metadata": {},
   "outputs": [],
   "source": [
    "#Drop 'relase_date'\n",
    "df.drop(columns=['release_date'], inplace=True)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 78,
   "id": "85bb1570",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>_id</th>\n",
       "      <th>genres</th>\n",
       "      <th>movie_id</th>\n",
       "      <th>original_language</th>\n",
       "      <th>overview</th>\n",
       "      <th>popularity</th>\n",
       "      <th>runtime</th>\n",
       "      <th>year_released</th>\n",
       "      <th>avg_rating</th>\n",
       "      <th>rating_count</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>5fc85ff26758f696344ad07f</td>\n",
       "      <td>[\"Horror\",\"Thriller\"]</td>\n",
       "      <td>house-at-the-end-of-the-street</td>\n",
       "      <td>en</td>\n",
       "      <td>A mother and daughter move to a new town and f...</td>\n",
       "      <td>11.088</td>\n",
       "      <td>101.0</td>\n",
       "      <td>2012.0</td>\n",
       "      <td>3.880987</td>\n",
       "      <td>689</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>5fc85ff26758f696344aceeb</td>\n",
       "      <td>[\"Crime\",\"Drama\"]</td>\n",
       "      <td>green-street-hooligans</td>\n",
       "      <td>en</td>\n",
       "      <td>After being wrongfully expelled from Harvard U...</td>\n",
       "      <td>14.690</td>\n",
       "      <td>109.0</td>\n",
       "      <td>2005.0</td>\n",
       "      <td>5.953771</td>\n",
       "      <td>411</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>5fc85ff26758f696344acf29</td>\n",
       "      <td>[\"Action\",\"Comedy\",\"Crime\"]</td>\n",
       "      <td>beverly-hills-cop-iii</td>\n",
       "      <td>en</td>\n",
       "      <td>Back in sunny southern California and on the t...</td>\n",
       "      <td>13.890</td>\n",
       "      <td>105.0</td>\n",
       "      <td>1994.0</td>\n",
       "      <td>4.492424</td>\n",
       "      <td>528</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>5fc85ff26758f696344ad019</td>\n",
       "      <td>[\"Adventure\",\"Action\",\"Comedy\",\"Thriller\",\"Cri...</td>\n",
       "      <td>bad-boys-ii</td>\n",
       "      <td>en</td>\n",
       "      <td>Out-of-control, trash-talking buddy cops Marcu...</td>\n",
       "      <td>32.121</td>\n",
       "      <td>147.0</td>\n",
       "      <td>2003.0</td>\n",
       "      <td>6.021593</td>\n",
       "      <td>1343</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>5fc85ff26758f696344ad100</td>\n",
       "      <td>[\"Romance\",\"Drama\"]</td>\n",
       "      <td>a-single-man</td>\n",
       "      <td>en</td>\n",
       "      <td>The life of George Falconer, a British college...</td>\n",
       "      <td>11.640</td>\n",
       "      <td>97.0</td>\n",
       "      <td>2009.0</td>\n",
       "      <td>7.660256</td>\n",
       "      <td>1404</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "                        _id  \\\n",
       "0  5fc85ff26758f696344ad07f   \n",
       "1  5fc85ff26758f696344aceeb   \n",
       "2  5fc85ff26758f696344acf29   \n",
       "3  5fc85ff26758f696344ad019   \n",
       "4  5fc85ff26758f696344ad100   \n",
       "\n",
       "                                              genres  \\\n",
       "0                              [\"Horror\",\"Thriller\"]   \n",
       "1                                  [\"Crime\",\"Drama\"]   \n",
       "2                        [\"Action\",\"Comedy\",\"Crime\"]   \n",
       "3  [\"Adventure\",\"Action\",\"Comedy\",\"Thriller\",\"Cri...   \n",
       "4                                [\"Romance\",\"Drama\"]   \n",
       "\n",
       "                         movie_id original_language  \\\n",
       "0  house-at-the-end-of-the-street                en   \n",
       "1          green-street-hooligans                en   \n",
       "2           beverly-hills-cop-iii                en   \n",
       "3                     bad-boys-ii                en   \n",
       "4                    a-single-man                en   \n",
       "\n",
       "                                            overview  popularity  runtime  \\\n",
       "0  A mother and daughter move to a new town and f...      11.088    101.0   \n",
       "1  After being wrongfully expelled from Harvard U...      14.690    109.0   \n",
       "2  Back in sunny southern California and on the t...      13.890    105.0   \n",
       "3  Out-of-control, trash-talking buddy cops Marcu...      32.121    147.0   \n",
       "4  The life of George Falconer, a British college...      11.640     97.0   \n",
       "\n",
       "   year_released  avg_rating  rating_count  \n",
       "0         2012.0    3.880987           689  \n",
       "1         2005.0    5.953771           411  \n",
       "2         1994.0    4.492424           528  \n",
       "3         2003.0    6.021593          1343  \n",
       "4         2009.0    7.660256          1404  "
      ]
     },
     "execution_count": 78,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "#Sanity Check\n",
    "df.head()"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "90aa38c5",
   "metadata": {},
   "source": [
    "## Final Dataframe\n",
    "I am happy with our dataframe now. Lets save it as a csv."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 42,
   "id": "7b08f599",
   "metadata": {},
   "outputs": [],
   "source": [
    "# Save the DataFrame to a CSV file\n",
    "df.to_csv('data/movies_data_content.csv', index=False)\n"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "a179196a",
   "metadata": {},
   "source": [
    "Lets make a data dictionary now that this is semi-finalized."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 80,
   "id": "bfad6eac",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "<class 'pandas.core.frame.DataFrame'>\n",
      "RangeIndex: 5061 entries, 0 to 5060\n",
      "Data columns (total 10 columns):\n",
      " #   Column             Non-Null Count  Dtype  \n",
      "---  ------             --------------  -----  \n",
      " 0   _id                5061 non-null   object \n",
      " 1   genres             5061 non-null   object \n",
      " 2   movie_id           5061 non-null   object \n",
      " 3   original_language  5061 non-null   object \n",
      " 4   overview           5061 non-null   object \n",
      " 5   popularity         5061 non-null   float64\n",
      " 6   runtime            5061 non-null   float64\n",
      " 7   year_released      5061 non-null   float64\n",
      " 8   avg_rating         5061 non-null   float64\n",
      " 9   rating_count       5061 non-null   int64  \n",
      "dtypes: float64(4), int64(1), object(5)\n",
      "memory usage: 395.5+ KB\n"
     ]
    }
   ],
   "source": [
    "df.info()"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "5df4d107",
   "metadata": {},
   "source": [
    "## Data Dictionary\n",
    "| Column             | Data Type   | Non-Null Count | Description                                           |\n",
    "|--------------------|-------------|----------------|-------------------------------------------------------|\n",
    "| _id                | Object      | 5061          | Global unique ID for the movie                        |\n",
    "| genres             | Object      | 5061          | Array of associated movie genres                      |\n",
    "| movie_id           | Object      | 5061          | Letterboxd movie ID                                   |\n",
    "| original_language  | Object      | 5061          | Original language of the movie (from TMDB)             |\n",
    "| overview           | Object      | 5061          | Description of the movie (from TMDB)                  |\n",
    "| popularity         | Float64     | 5061          | Numeric popularity score of the movie (from TMDB)      |\n",
    "| runtime            | Float64     | 5061          | Duration of the movie in minutes                      |\n",
    "| year_released      | Float64     | 5061          | Year when the movie was released                      |\n",
    "| avg_rating         | Float64     | 5061          | Average rating for this movie within the dataset      |\n",
    "| rating_count       | Int64       | 5061          | Number of ratings for a particular movie within this dataset |"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "3a19e7c0",
   "metadata": {},
   "outputs": [],
   "source": []
  }
 ],
 "metadata": {
  "kernelspec": {
   "display_name": "Python 3 (ipykernel)",
   "language": "python",
   "name": "python3"
  },
  "language_info": {
   "codemirror_mode": {
    "name": "ipython",
    "version": 3
   },
   "file_extension": ".py",
   "mimetype": "text/x-python",
   "name": "python",
   "nbconvert_exporter": "python",
   "pygments_lexer": "ipython3",
   "version": "3.11.5"
  }
 },
 "nbformat": 4,
 "nbformat_minor": 5
}
